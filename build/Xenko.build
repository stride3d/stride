<?xml version="1.0" encoding="utf-8"?>
<!--
Build file used to build Xenko and package it from the command line.
Example of use: 
"C:\Program Files (x86)\MSBuild\14.0\Bin\MSBuild" Xenko.build /t:Package
-->
<Project ToolsVersion="15.0" DefaultTarget="Help" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <XenkoRoot>$(MSBuildThisFileDirectory)..\</XenkoRoot>
    <XenkoSolution>$(XenkoRoot)build\Xenko</XenkoSolution>
    <XenkoSolutionLauncher>$(XenkoRoot)build\Xenko.Launcher</XenkoSolutionLauncher>
    <XenkoPlatforms Condition="'$(XenkoPlatforms)' == ''">Windows</XenkoPlatforms>
    <BuildProperties>Configuration=Release;NoWarn=1591;DeployExtension=false;XenkoPlatforms=$([MSBuild]::Escape('$(XenkoPlatforms)'));XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)</BuildProperties>
    <BuildProperties Condition="'$(XenkoSign)' != ''">$(BuildProperties);XenkoSign=$(XenkoSign)</BuildProperties>
    <BuildProperties Condition="'$(XenkoOfficialBuild)' != ''">$(BuildProperties);XenkoOfficialBuild=$(XenkoOfficialBuild)</BuildProperties>
    <NuGetPath>$(MSBuildThisFileDirectory).nuget\NuGet.exe</NuGetPath>
    <XunitRunnerConsoleVersion>2.3.1</XunitRunnerConsoleVersion>
    <XenkoStoreUrl Condition="'$(XenkoStoreUrl)' == ''">https://api.nuget.org/v3/index.json</XenkoStoreUrl>
    <AdvancedInstallerPath Condition="'$(AdvancedInstallerPath)' == '' And Exists('$(MSBuildProgramFiles32)\Caphyon\Advanced Installer 15.5.1\bin\x86\advinst.exe')">$(MSBuildProgramFiles32)\Caphyon\Advanced Installer 15.5.1\bin\x86\advinst.exe</AdvancedInstallerPath>
  </PropertyGroup>

  <UsingTask TaskName="Xenko.GitVersioning.GenerateVersionFile" AssemblyFile="$(XenkoRoot)deps\Xenko.GitVersioning\bin\Debug\net472\Xenko.GitVersioning.dll" />
  
  <Target Name="Help">
    <Message Importance="high" Text="TODO"/>
  </Target>
  
  <!--
  VSIX Xenko plugin
  Don't forget to build for VS2013 by using MSBuild 12.0, 
  or if you're using a newer version of MSBuild, pass the flag /p:VisualStudioVersion=12.0 when calling MSBuild in the command line.
  -->
  <Target Name="VSIXPlugin" DependsOnTargets="Restore">
    <ItemGroup>
      <FilesToDeleteVSIX Include="$(XenkoRoot)bin\vsix\*.nupkg"/>
    </ItemGroup>

    <Delete Files="@(FilesToDeleteVSIX)"/>

    <MSBuild Targets="91-VisualStudio\Xenko_VisualStudio_Package;91-VisualStudio\Xenko_VisualStudio_PackageInstall" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);Platform=Mixed Platforms"/>
    <Exec Command='"$(NuGetPath)" pack "$(XenkoRoot)sources\tools\Xenko.VisualStudio.Package\Xenko.VisualStudio.Package.nuspec" -BasePath "$(XenkoRoot)sources\tools\Xenko.VisualStudio.Package" -OutputDirectory "$(XenkoRoot)bin\vsix"' />
  </Target>
  
  <!--
  Package Installer: install-prerequisites.exe
  -->
  <Target Name="PrerequisitesInstaller">
    <Delete Files="$(XenkoRoot)Bin\Prerequisites\install-prerequisites.exe"/>
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\prerequisites\prerequisites.aip"'/>
  </Target>

  <!--
  Perform a full build: Build, Package
  -->
  <Target Name="FullBuild">
    <CallTarget Targets="Build"/>
    <CallTarget Targets="Package"/>
    <CallTarget Targets="VSIXPlugin"/>
  </Target>
  
  <!--
  Publish Xenko nupkg from this folder to the store
  -->
  <Target Name="Publish">
    <Error Condition="'$(XenkoStoreApiKey)' == ''" Text="Missing env variable XenkoStoreApiKey"/>
    <!-- Waiting 30min in case NuGet.Gallery/Server takes time to process -->
    <ItemGroup>
      <NuGetPackage Include="..\bin\packages\*.nupkg"/>
      <!-- Remove GameStudio (pushed in a second stage) -->
      <NuGetPackage Remove="@(NuGetPackage)" Condition="$([System.String]::Copy('%(Filename)').Contains('Xenko.GameStudio'))"/>
      <!-- Remove Samples.Templates (pushed only when requested since versionned separately -->
      <NuGetPackage Remove="@(NuGetPackage)" Condition="'$(XenkoPublishSkipSamplesTemplates)' == 'true' And $([System.String]::Copy('%(Filename)').Contains('Xenko.Samples.Templates'))"/>
    </ItemGroup>
    <Exec Command='"$(NuGetPath)" push %(NuGetPackage.Identity) -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -Timeout 1800 -NoSymbols'/>
    <!-- Push GameStudio so that dependencies are already uploaded -->
    <Exec Command='"$(NuGetPath)" push ..\bin\packages\Xenko.GameStudio*.nupkg -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -Timeout 1800 -NoSymbols'/>
  </Target>

  <!--
  Publish VSIX nupkg from this folder to the store
  -->
  <Target Name="PublishVSIX">
    <Error Condition="'$(XenkoStoreApiKey)' == ''" Text="Missing env variable XenkoStoreApiKey"/>
    <Exec Command='"$(NuGetPath)" push ..\bin\vsix\*.nupkg -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -NoSymbols'/>
  </Target>
  
  <!--
  Build Xenko: Windows, Android, iOS, Windows 10 (UWP)
  -->
  <Target Name="Clean">
    <Exec Command="RMDIR /Q /S $(XenkoRoot)\Bin"/>
  </Target>
  
  <!-- Package -->
  <Target Name="PreparePackageBuild">
    <PropertyGroup>
      <BuildProperties>$(BuildProperties);XenkoPublicApi=true;XenkoPackageBuild=true;XenkoSignTool=true</BuildProperties>
    </PropertyGroup>
	
    <ItemGroup>
      <FilesToDeletePackages Include="$(XenkoRoot)bin\packages\*.nupkg"/>
    </ItemGroup>

    <Delete Files="@(FilesToDeletePackages)"/>

    <!-- Make sure Xenko.GitVersioning is built to run the task to update package version.
         It might be better to move it to a prebuilt assembly if that becomes a problem.
    -->
	<MSBuild Targets="Restore" Projects="$(XenkoRoot)deps\Xenko.GitVersioning\Xenko.GitVersioning.csproj"/>
    <MSBuild Targets="Build" Projects="$(XenkoRoot)deps\Xenko.GitVersioning\Xenko.GitVersioning.csproj"/>
    
    <!-- Create SharedAssemblyInfo.NuGet.cs with Git information (different between official build and internal builds) -->
    <GenerateVersionFile Condition="'$(XenkoOfficialBuild)' == 'true'" RootDirectory="$(XenkoRoot)" VersionFile="sources\shared\SharedAssemblyInfo.cs" GeneratedVersionFile="sources\shared\SharedAssemblyInfo.NuGet.cs" SpecialVersionGitCommit="true">
      <Output TaskParameter="NuGetVersion" PropertyName="XenkoPackageVersion"/>
    </GenerateVersionFile>
    <GenerateVersionFile Condition="'$(XenkoOfficialBuild)' != 'true'" RootDirectory="$(XenkoRoot)" VersionFile="sources\shared\SharedAssemblyInfo.cs" GeneratedVersionFile="sources\shared\SharedAssemblyInfo.NuGet.cs" SpecialVersion="-" SpecialVersionGitHeight="true" SpecialVersionGitCommit="true">
      <Output TaskParameter="NuGetVersion" PropertyName="XenkoPackageVersion"/>
    </GenerateVersionFile>

	<Message Text="Done preparing build for version $(XenkoPackageVersion)"/>
	<TeamCitySetBuildNumber BuildNumber="$(XenkoPackageVersion)" Condition="'$(TEAMCITY_BUILD_PROPERTIES_FILE)' != '' " />
  </Target>
  <Target Name="Package" DependsOnTargets="PreparePackageBuild;PrerequisitesInstaller;Build;VSIXPlugin"/>
  
  <Target Name="CopyXenkoKey">
    <Copy Condition="'$(XenkoSign)' == 'true' And Exists('$(LOCALAPPDATA)\Xenko\XenkoBuildKey\xenko.snk')" SourceFiles="$(LOCALAPPDATA)\Xenko\XenkoBuildKey\xenko.snk" DestinationFolder="$(MSBuildThisFileDirectory)"/>
  </Target>

  <Target Name="Restore">
    <PropertyGroup>
	  <RestoreExec><![CDATA[
        set XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)
        set XenkoGraphicsApi=$(XenkoGraphicsApi)
        set XenkoPlatforms=$(XenkoPlatforms)
        "$(NuGetPath)" restore "$(XenkoSolution).sln"
      ]]></RestoreExec>
    </PropertyGroup>
    <Exec Command="$(RestoreExec)" />
  </Target>

  <Target Name="Build" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
	<MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);Platform=Mixed Platforms"/>
  </Target>

  <Target Name="BuildRuntime" DependsOnTargets="CopyXenkoKey">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution)"/>
	<MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties)"/>
  </Target>
  
  <Target Name="BuildWindows" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoSkipAutoPack=true;XenkoSkipUnitTests=true;XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
  </Target>

  <Target Name="BuildWindowsDirect3D11" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildWindowsDirect3D12" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApi=Direct3D12"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApi=Direct3D12;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildWindowsOpenGL" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApi=OpenGL"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApi=OpenGL;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildWindowsOpenGLES" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApi=OpenGLES"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApi=OpenGLES;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildAndroid" DependsOnTargets="CopyXenkoKey">
    <Exec Command='"$(NuGetPath)" restore "$(XenkoSolution).Android.sln"' />
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Android.sln" Properties="$(BuildProperties);XenkoPlatforms=Android;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>

  <Target Name="BuildiOS" DependsOnTargets="CopyXenkoKey">
    <Exec Command='"$(NuGetPath)" restore "$(XenkoSolution).iOS.sln"' />
    <MSBuild Targets="Build" Projects="$(XenkoSolution).iOS.sln" Properties="$(BuildProperties);XenkoPlatforms=iOS;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildWindowsStore" DependsOnTargets="CopyXenkoKey">
    <!-- Only a warning since build servers might still call this target for old branches -->
    <Warning Text="Windows Store doesn't exist anymore"/>
  </Target>

  <Target Name="BuildWindows10" DependsOnTargets="BuildUWP" />

  <Target Name="BuildUWP" DependsOnTargets="CopyXenkoKey">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
      <XenkoPlatforms>UWP</XenkoPlatforms>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoPlatforms=$(XenkoPlatforms);XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildWindowsPhone" DependsOnTargets="CopyXenkoKey">
    <!-- Only a warning since build servers might still call this target for old branches -->
    <Warning Text="Windows Phone doesn't exist anymore"/>
  </Target>
  
  <Target Name="BuildWindowsVulkan" DependsOnTargets="CopyXenkoKey">
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution).Runtime;XenkoGraphicsApi=Vulkan"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).Runtime.sln" Properties="$(BuildProperties);XenkoGraphicsApi=Vulkan;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target>
  
  <Target Name="BuildLinux" DependsOnTargets="CopyXenkoKey">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
      <XenkoPlatforms>Linux</XenkoPlatforms>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoPlatforms=$(XenkoPlatforms);XenkoSkipAutoPack=true;XenkoSkipUnitTests=true;XenkoGraphicsApiDependentBuildAll=$(XenkoGraphicsApiDependentBuildAll)"/>
  </Target> 

  <Target Name="BuildLinuxVulkan" DependsOnTargets="CopyXenkoKey">
    <PropertyGroup>
      <XenkoSolution>$(XenkoSolution).Runtime</XenkoSolution>
      <XenkoPlatforms>Linux</XenkoPlatforms>
    </PropertyGroup>
    <MSBuild Targets="Restore" Projects="$(MSBuildThisFileFullPath)" Properties="XenkoPlatforms=$(XenkoPlatforms);XenkoSolution=$(XenkoSolution);XenkoGraphicsApi=Vulkan"/>
    <MSBuild Targets="Build" Projects="$(XenkoSolution).sln" Properties="$(BuildProperties);XenkoPlatforms=$(XenkoPlatforms);XenkoGraphicsApi=Vulkan;XenkoSkipAutoPack=true;XenkoSkipUnitTests=true"/>
  </Target> 
  
  <Target Name="BuildmacOS" DependsOnTargets="CopyXenkoKey">
    <Exec Command='"$(NuGetPath)" restore "$(XenkoSolution).macOS.sln"' />
    <MSBuild Targets="Build" Projects="$(XenkoSolution).macOS.sln" Properties="$(BuildProperties);Platform=macOS"/>
  </Target> 

  <Target Name="DownloadXunitRunnerConsole">
    <MakeDir Directories="$(MSBuildThisFileDirectory)packages"/>
    <PropertyGroup>
      <XunitRunnerConsolePath>$(MSBuildThisFileDirectory)packages\xunit.runner.console.$(XunitRunnerConsoleVersion)\tools\net452\xunit.console.exe</XunitRunnerConsolePath>
    </PropertyGroup>
    <Exec Command='"$(NuGetPath)" install xunit.runner.console -Version $(XunitRunnerConsoleVersion)' Condition="!Exists('$(XunitRunnerConsolePath)')" WorkingDirectory="$(MSBuildThisFileDirectory)packages" />
    <Error Text="Could not find xunit.runner at expected location [$(XunitRunnerConsolePath)]" Condition="!Exists('$(XunitRunnerConsolePath)')"/>
  </Target>
  
  <Target Name="RunTestsWindows" DependsOnTargets="DownloadXunitRunnerConsole">
    <!-- By default, enable all known categories -->
    <PropertyGroup>
      <XenkoTestCategories Condition="'$(XenkoTestCategories)' == ''">Simple;Game;VSPackage</XenkoTestCategories>
      <!-- We enclose everything with ;, so that we could do full word matches more easily with string.Contains() -->
      <XenkoTestCategories>;$(XenkoTestCategories);</XenkoTestCategories>
	  <XenkoTestExtraTargets></XenkoTestExtraTargets>
      <XenkoTestExtraTargets Condition="$(XenkoTestCategories.Contains(';GameAndroid;'))">$(XenkoTestExtraTargets);SignAndroidPackage</XenkoTestExtraTargets>
    </PropertyGroup>
    
    <!-- Simple standalone unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';Simple;'))">
      <UnitTest Include="11-CoreRuntime.Tests\Xenko.Core.Tests"/>
      <UnitTest Include="21-XenkoRuntime.Tests\Xenko.Shaders.Tests.Windows"/>
      <UnitTest Include="31-CoreDesign.Tests\Xenko.Core.BuildEngine.Tests"/>
      <UnitTest Include="31-CoreDesign.Tests\Xenko.Core.Design.Tests"/>
      <UnitTest Include="31-CoreDesign.Tests\Xenko.Core.Yaml.Tests"/>
      <UnitTest Include="41-Assets.Tests\Xenko.Core.Assets.Quantum.Tests"/>
      <UnitTest Include="41-Assets.Tests\Xenko.Core.Assets.Tests"/>
      <UnitTest Include="51-Presentation.Tests\Xenko.Core.Presentation.Quantum.Tests"/>
      <UnitTest Include="51-Presentation.Tests\Xenko.Core.Presentation.Tests"/>
      <UnitTest Include="51-Presentation.Tests\Xenko.Core.Quantum.Tests"/>
      <UnitTest Include="61-Editor.Tests\Xenko.Core.Assets.Editor.Tests"/>
      <UnitTest Include="61-Editor.Tests\Xenko.GameStudio.Tests"/>
      <UnitTest Include="71-XenkoAssets.Tests\Xenko.Assets.Tests2"/>
    </ItemGroup>
    
    <ItemGroup>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Engine.Tests.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Graphics.Tests.10_0.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Graphics.Tests.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Navigation.Tests.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Input.Tests.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Particles.Tests.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.Physics.Tests.Windows"/>
      <UnitTestGame Include="21-XenkoRuntime.Tests\Xenko.UI.Tests.Windows"/>
    </ItemGroup>

    <ItemGroup>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.Engine.Tests.Android"/>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.Graphics.Tests.10_0.Android"/>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.Graphics.Tests.Android"/>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.Input.Tests.Android"/>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.Particles.Tests.Android"/>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.Physics.Tests.Android"/>
      <UnitTestGameAndroid Include="21-XenkoRuntime.Tests\Xenko.UI.Tests.Android"/>
    </ItemGroup>
    
    <!-- Direct3D11 unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';Game;'))">
      <UnitTest Include="@(UnitTestGame)"/>
      <!-- Other graphics platforms don't support compute shaders and tessellation yet -->
      <UnitTest Include="21-XenkoRuntime.Tests\Xenko.Graphics.Tests.11_0.Windows"/>
      <UnitTest Include="21-XenkoRuntime.Tests\Xenko.Audio.Tests.Windows"/>
      <UnitTest Include="71-XenkoAssets.Tests\Xenko.Assets.Tests"/>
    </ItemGroup>

    <!-- Unit tests for Visual Studio -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';VSPackage;'))">
      <UnitTest Include="91-VisualStudio\Xenko.VisualStudio.Package.Tests"/>
    </ItemGroup>

    <!-- Direct3D12 unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';GameDirect3D12;'))">
      <UnitTestPrerequisites Include="@(UnitTestGame)"/>
      <UnitTest Include="@(UnitTestGame)"><Solution>$(XenkoSolution).Direct3D12.sln</Solution></UnitTest>
    </ItemGroup>

    <!-- OpenGL unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';GameOpenGL;'))">
      <UnitTestPrerequisites Include="@(UnitTestGame)"/>
      <UnitTest Include="@(UnitTestGame)"><Solution>$(XenkoSolution).OpenGL.sln</Solution></UnitTest>
    </ItemGroup>

    <!-- OpenGLES unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';GameOpenGLES;'))">
      <UnitTestPrerequisites Include="@(UnitTestGame)"/>
      <UnitTest Include="@(UnitTestGame)"><Solution>$(XenkoSolution).OpenGLES.sln</Solution></UnitTest>
    </ItemGroup>
    
    <!-- Vulkan unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';GameVulkan;'))">
      <UnitTestPrerequisites Include="@(UnitTestGame)"/>
      <UnitTest Include="@(UnitTestGame)"><Solution>$(XenkoSolution).Vulkan.sln</Solution></UnitTest>
    </ItemGroup>
	
	<!-- Android unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';GameAndroid;'))">
      <UnitTestPrerequisites Include="@(UnitTestGame)"/>
      <UnitTest Include="@(UnitTestGameAndroid)"><Solution>$(XenkoSolution).Android.sln</Solution></UnitTest> 
    </ItemGroup>
	
	<!-- Samples unit tests -->
    <ItemGroup Condition="$(XenkoTestCategories.Contains(';Samples;'))">
      <UnitTest Include="72-XenkoSamples\Xenko.Samples.Tests"/>
    </ItemGroup>
    
    <!-- Compute TargetName and default Solution -->    
    <ItemGroup>
      <UnitTestPrerequisites>
        <!-- Replace . into _ (needed for .sln targets) -->
        <TargetName>$([System.String]::Copy('%(Identity)').Replace('.','_'))</TargetName>
        <!-- Default solution -->
        <Solution Condition="'%(UnitTestPrerequisites.Solution)' == ''">$(XenkoSolution).sln</Solution>
      </UnitTestPrerequisites>
      <UnitTest>
        <!-- Replace . into _ (needed for .sln targets) -->
        <TargetName>$([System.String]::Copy('%(Identity)').Replace('.','_'))</TargetName>
        <!-- Default solution -->
        <Solution Condition="'%(UnitTest.Solution)' == ''">$(XenkoSolution).sln</Solution>
      </UnitTest>
    </ItemGroup>
	
    <!-- Restore NuGet packages -->
    <Message Importance="High" Text="Restoring NuGet packages"/>
    <Exec Condition="'%(UnitTestPrerequisites.Solution)' != ''" Command='"$(NuGetPath)" restore "%(UnitTestPrerequisites.Solution)"' />
    <Exec Condition="'%(UnitTest.Solution)' != ''" Command='"$(NuGetPath)" restore "%(UnitTest.Solution)"' />
    
    <!-- First, build prerequisites -->
    <Message Importance="High" Text="Building unit test prerequisites from solution %(Solution): @(UnitTestPrerequisites->'%(TargetName)')"/>
    <MSBuild Targets="@(UnitTestPrerequisites->'%(TargetName)')" Projects="%(Solution)" Properties="$(BuildProperties);Platform=Mixed Platforms;DeployExtension=true"/>

    <!-- Build unit tests -->
    <Message Importance="High" Text="Building unit test from solution %(Solution): @(UnitTest->'%(TargetName)')"/>
    <MSBuild Targets="@(UnitTest->'%(TargetName)');$(XenkoTestExtraTargets)" Projects="%(Solution)" Properties="$(BuildProperties);DeployExtension=true">
        <Output TaskParameter="TargetOutputs" ItemName="AssembliesToTest" />
    </MSBuild>
	
    <!-- Run unit tests -->
    <MakeDir Directories="$(MSBuildThisFileDirectory)TestResults"/>
    <Exec Command="&quot;$(XunitRunnerConsolePath)&quot; @(AssembliesToTest->'%(Identity)', ' ')"/>
  </Target>
  
  <ItemGroup>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Engine.Tests\Xenko.Engine.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Audio.Tests\Xenko.Audio.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Graphics.Tests\Xenko.Graphics.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Graphics.Tests.10_0\Xenko.Graphics.Tests.10_0.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Input.Tests\Xenko.Input.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Particles.Tests\Xenko.Particles.Tests.$(PlatformToBuild).csproj"/>
    <MobileUnitTestProject Include="$(XenkoRoot)sources\engine\Xenko.Physics.Tests\Xenko.Physics.Tests.$(PlatformToBuild).csproj"/>
  </ItemGroup>
  
  <ItemGroup>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Engine.Tests\Xenko.Engine.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Physics.Tests\Xenko.Physics.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Audio.Tests\Xenko.Audio.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Graphics.Tests.10_0\Xenko.Graphics.Tests_10_0-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Graphics.Tests\Xenko.Graphics.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Input.Tests\Xenko.Input.Tests-Signed.apk"/>
    <MobileUnitTestApk Include="$(XenkoRoot)\Bin\Android\Tests\OpenGLES\Xenko.Particles.Tests\Xenko.Particles.Tests-Signed.apk"/>
  </ItemGroup>
  
  <Target Name="RunTestsMobile" DependsOnTargets="DownloadXunitRunnerConsole" Outputs="%(MobileUnitTestProject.Identity)">
    <PropertyGroup>
      <XenkoRoot>$(MSBuildThisFileDirectory)..\</XenkoRoot>
      <XenkoPlatform></XenkoPlatform>
      <XenkoPlatform Condition="'$(PlatformToBuild)' == 'iOS'">Platform=iPhone</XenkoPlatform>
      <XenkoPlatform Condition="'$(PlatformToBuild)' == 'Android'">Platform=Android</XenkoPlatform>
      <XenkoBuildOptions></XenkoBuildOptions>
      <XenkoBuildOptions Condition="'$(PlatformToBuild)' == 'iOS'">ServerAddress=pc13095;ServerUser=virgile;BuildIpa=true;MtouchUseLlvm=true</XenkoBuildOptions>
      <XenkoBuildTargets>Rebuild</XenkoBuildTargets>
      <XenkoBuildTargets Condition="'$(PlatformToBuild)' == 'Android'">SignAndroidPackage</XenkoBuildTargets>
      <XenkoBuildConfig>Release</XenkoBuildConfig>
      <XenkoBuildConfig Condition="'$(PlatformToBuild)' == 'Windows'">Debug</XenkoBuildConfig>
    </PropertyGroup>
  
    <MSBuild Projects ="%(MobileUnitTestProject.Identity)" Targets="SignAndroidPackage"
             Properties="SolutionName=Xenko.Android; SolutionDir=$(MSBuildThisFileDirectory);$(XenkoPlatform);Configuration=$(XenkoBuildConfig);$(XenkoBuildOptions)">
    </MSBuild>
    <Exec IgnoreExitCode="True" Command='taskkill /F /FI "Imagename eq Xenko.Core.Assets.CompilerApp*"' />
    
    <Exec Condition="'$(PlatformToBuild)' == 'Android'" Command="$(XenkoRoot)sources\tools\Xenko.TestRunner\bin\Release\net472\Xenko.TestRunner.exe %(MobileUnitTestApk.Identity)">
      <Output TaskParameter="ExitCode" ItemName="exitCode" />
    </Exec>
  </Target>
  
  <!--
  Package Launcher
  -->
  <Target Name="PackageLauncher" DependsOnTargets="LauncherPrerequisitesInstaller">
    <ItemGroup>
      <FilesToDeleteLauncher Include="$(XenkoRoot)bin\launcher\*.nupkg"/>
    </ItemGroup>

    <!-- Note: we avoid building again if BuildWindows was already ran just before -->
    <Delete Files="@(FilesToDeleteLauncher)"/>
    
    <!-- Generate the nuget package for the launcher application -->
    <Exec Command='"$(NuGetPath)" pack "$(XenkoRoot)sources\launcher\Xenko.LauncherApp\Xenko.LauncherApp.nuspec" -BasePath "$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release" -OutputDirectory "$(XenkoRoot)bin\launcher"' />
  </Target>
  
  <!--
  Package Installer: XenkoSetup.exe
  -->
  <Target Name="PackageInstallerSimple" DependsOnTargets="PackageLauncher">
    <Delete Files="$(XenkoRoot)bin\launcher\XenkoSetup.exe"/>
    <!-- Run advanced installer -->
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\launcher\Setup\setup.aip"'/>
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Setup\setup-SetupFiles\XenkoSetup.exe" DestinationFolder="$(XenkoRoot)bin\launcher"/>
  </Target>
  <Target Name="PackageInstallerCustom" DependsOnTargets="PackageLauncher">
    <Error Condition="'$(CustomInstaller)' == '' Or '$(CustomInstallerStoreUrl)' == ''" Text="When CustomInstaller is set, CustomInstallerStoreUrl also needs to be defined"/>
    <PropertyGroup>
      <CustomInstallerNoSpace>$(CustomInstaller.Replace(' ', ''))</CustomInstallerNoSpace>
    </PropertyGroup>
  
    <Delete Files="XenkoSetup$(CustomInstallerNoSpace).exe"/>
    <!-- Make sure it is deleted otherwise Advanced Installer complains (in case previous run didn't complete -->
    <Delete Files="$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"/>
    <!-- Duplicate setup.aip with different IDs -->
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup.aip" /DuplicateProject "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"'/>
    <!-- Edit a few parameters -->
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip" /SetProperty BuildExeName="XenkoSetup$(CustomInstallerNoSpace)"'/>
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip" /SetProperty ProductName="Xenko $(CustomInstaller)"'/>
    <Exec Command='"$(AdvancedInstallerPath)" /edit "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip" /SetProperty AI_PRODUCTNAME_ARP="Xenko $(CustomInstaller)"'/>

    <!-- Backup store.config -->
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config" DestinationFiles="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config.backup"/>
    
    <!-- Update store.config with additional parameters -->
    <Exec Command='"$(NuGetPath)" sources Add -Name "Xenko $(CustomInstaller)" -Source "$(CustomInstallerStoreUrl)" -ConfigFile "$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config"'/>
	
    <!-- Run advanced installer -->
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"'/>
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace)-SetupFiles\XenkoSetup$(CustomInstallerNoSpace).exe" DestinationFolder="$(MSBuildThisFileDirectory)"/>
    <Delete Files="$(XenkoRoot)sources\launcher\Setup\setup-$(CustomInstallerNoSpace).aip"/>
	
    <!-- Restore store.config -->
    <Copy SourceFiles="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config.backup" DestinationFiles="$(XenkoRoot)Xenko.LauncherApp\bin\Release\store.config"/>
    <Delete Files="$(XenkoRoot)sources\launcher\Xenko.LauncherApp\bin\Release\store.config.backup"/>	
  </Target>
  <PropertyGroup>
    <!-- Choose proper target to execute -->
    <PackageInstallerTarget Condition="'$(CustomInstaller)' == ''">PackageInstallerSimple</PackageInstallerTarget>
    <PackageInstallerTarget Condition="'$(CustomInstaller)' != ''">PackageInstallerCustom</PackageInstallerTarget>
  </PropertyGroup>
  <Target Name="PackageInstaller" DependsOnTargets="$(PackageInstallerTarget)"/>
  
  <!--
  Package Installer: launcher-prerequisites.exe
  -->
  <Target Name="LauncherPrerequisitesInstaller">
    <Exec Command='"$(AdvancedInstallerPath)" /rebuild "$(XenkoRoot)sources\launcher\Prerequisites\launcher-prerequisites.aip"'/>
  </Target>

  <!--
  Perform a full build: Build, Package and PackageInstaller
  -->
  <Target Name="FullBuildLauncher">
    <CallTarget Targets="BuildLauncher"/>
    <CallTarget Targets="PackageInstaller"/>
  </Target>
  
  <!--
  Publish Launcher nupkg from this folder to the store
  -->
  <Target Name="PublishLauncher">
    <Error Condition="'$(XenkoStoreApiKey)' == ''" Text="Missing env variable XenkoStoreApiKey"/>
    <Exec Command='"$(NuGetPath)" push ..\bin\launcher\*.nupkg -ApiKey $(XenkoStoreApiKey) -Source $(XenkoStoreUrl) -NoSymbols'/>
  </Target>
  
  <Target Name="BuildLauncher" DependsOnTargets="CopyXenkoKey">
    <Exec Command='"$(NuGetPath)" restore "$(XenkoSolutionLauncher).sln"' />
	<MSBuild Targets="Build" Projects="$(XenkoSolutionLauncher).sln" Properties="$(BuildProperties);XenkoSignTool=true;Platform=Any CPU"/>
  </Target>

</Project>
