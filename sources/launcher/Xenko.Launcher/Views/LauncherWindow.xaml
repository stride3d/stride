<Window x:Class="Xenko.LauncherApp.Views.LauncherWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:Xenko.LauncherApp.Views"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Xenko.LauncherApp.ViewModels"
        xmlns:sskk="http://schemas.xenko.com/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:services="clr-namespace:Xenko.LauncherApp.Services"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:r="clr-namespace:Xenko.LauncherApp.Resources"
        Title="{x:Static r:Strings.LauncherTitle}"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance vm:LauncherViewModel}"
        WindowStartupLocation="CenterScreen" Style="{DynamicResource WindowChromeStyle}"
        Height="768" Width="1024" FontFamily="Segoe UI" 
        Visibility="{Binding IsVisible, Converter={sskk:VisibleOrHidden}}">
  <Window.Resources>
    <ResourceDictionary>
      <!--BitmapImage x:Key="LauncherIcon" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/Logo.ico" /-->
      <BitmapImage x:Key="EditorIcon" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/EditorIcon.png" />
      <BitmapImage x:Key="ImageSwitchVersion" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/switch-version.png"/>
      <BitmapImage x:Key="ImageVisualStudio" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/visual-studio.png"/>
      <BitmapImage x:Key="ImageProjects" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/recent-projects.png"/>
      <BitmapImage x:Key="ImageGithub" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/github.png"/>
      <BitmapImage x:Key="ImageIssues" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/issues.png"/>
      <BitmapImage x:Key="ImageForums" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/chat-16.png"/>
      <BitmapImage x:Key="ImageChat" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/discord.png"/>
      <BitmapImage x:Key="ImageShowcase" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/showcase.png"/>
      <BitmapImage x:Key="ImageRoadmap" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/roadmap.png"/>
      <BitmapImage x:Key="ImageSurvey" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/survey.png"/>
      <BitmapImage x:Key="ImageTwitter" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/twitter_bird_24.png"/>
      <BitmapImage x:Key="ImageFacebook" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/facebook_24.png"/>
      <BitmapImage x:Key="ImageReddit" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/reddit_24.png"/>
      <BitmapImage x:Key="ImagePatreon" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/patreon_mark_coral_24.png"/>
      
      <BitmapImage x:Key="ImageDownload" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/download-26-dark.png"/>
      <BitmapImage x:Key="ImageUpdate" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/update.png"/>
      <BitmapImage x:Key="ImageDelete" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/delete-26-dark.png"/>
      <BitmapImage x:Key="ImageUpgrade" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/upgrade-16.png"/>
      <BitmapImage x:Key="ImageReleaseNotes" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/note-26-dark.png"/>
      <BitmapImage x:Key="ImageListVersions" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/list-26.png"/>
      <BitmapImage x:Key="ImageBackground" UriSource="pack://application:,,,/Xenko.Launcher;component/Resources/Robot.jpg"/>

      <s:Double x:Key="ReleaseNotesMargin">20</s:Double>
      <Thickness x:Key="TileBorderThickness">15</Thickness>
      <Thickness x:Key="TileListBorderThickness">0,0,0,20</Thickness>
      <!-- 15 + 16 vertically -->
      <Thickness x:Key="TabHeaderMargin">0,15,0,31</Thickness>
      <SolidColorBrush x:Key="TileBorderBrush" Color="Transparent"/>
      <SolidColorBrush x:Key="TileAlphaBackgroundBrush" Color="#C0434343"/>
      <SolidColorBrush x:Key="EmphasisButtonBackground" Color="#900520"/>
      <Color x:Key="EmphasisButtonHoverColor">#DA0830</Color>

      <Style TargetType="{x:Type l:StaysOpenContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}"/>

      <DataTemplate DataType="{x:Type vm:XenkoDevVersionViewModel}">
        <DockPanel Margin="0,2" Height="32" SnapsToDevicePixels="True" Background="{StaticResource TileAlphaBackgroundBrush}"
                   Visibility="{Binding IsVisible, Converter={sskk:VisibleOrCollapsed}, Mode=OneWay}">
          <StackPanel MinWidth="32" Orientation="Horizontal" DockPanel.Dock="Right" IsEnabled="{Binding IsProcessing, Converter={sskk:InvertBool}}">
            <!-- DELETE BUTTON -->
            <Button Content="{sskk:Image {StaticResource ImageDelete}, 20, 20}" Width="32" Height="32" ToolTipService.IsEnabled="False"
                    ToolTip="{Binding FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipUninstall}}" Margin="4,0,0,0"
                    Visibility="{Binding CanDelete, Converter={sskk:VisibleOrCollapsed}}" Command="{Binding DeleteCommand}">
              <i:Interaction.Behaviors>
                <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                       DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
              </i:Interaction.Behaviors>
            </Button>
          </StackPanel>
          <Grid>
            <Button Command="{Binding SetAsActiveCommand}" x:Name="VersionButton" ToolTipService.IsEnabled="False"
                  ToolTip="{Binding FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipSetActiveVersion}}"
                  Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}, ConverterParameter={sskk:False}}">
              <TextBlock Text="{Binding DisplayName, StringFormat={x:Static r:Strings.VersionButton}, Mode=OneWay}"/>
              <i:Interaction.Behaviors>
                <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
              </i:Interaction.Behaviors>
            </Button>
          </Grid>
        </DockPanel>
      </DataTemplate>

      <DataTemplate DataType="{x:Type vm:XenkoStoreAlternateVersionViewModel}">
        <TextBlock Text="ASD" />
      </DataTemplate>

      <DataTemplate DataType="{x:Type vm:XenkoStoreVersionViewModel}">
        <DockPanel Margin="0,2" Height="32" SnapsToDevicePixels="True" Background="{StaticResource TileAlphaBackgroundBrush}"
                   Visibility="{Binding IsVisible, Converter={sskk:VisibleOrCollapsed}, Mode=OneWay}">
          <StackPanel MinWidth="32" Orientation="Horizontal" DockPanel.Dock="Right" IsEnabled="{Binding IsProcessing, Converter={sskk:InvertBool}}">
            <!-- UPDATE BUTTON -->
            <Button Width="32" Height="32" ToolTipService.IsEnabled="False" Margin="4,0,0,0"
                    ToolTip="{Binding ServerVersionFullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipUpdate}}"
                    Visibility="{sskk:MultiBinding {Binding CanBeDownloaded}, {Binding CanDelete},
                    Converter={sskk:MultiChained {sskk:AndMultiConverter}, {sskk:VisibleOrCollapsed}}}" Command="{Binding DownloadCommand}">
              <i:Interaction.Behaviors>
                <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                       DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
              </i:Interaction.Behaviors>
              <Rectangle Width="20" Height="20" Fill="White">
                <Rectangle.OpacityMask>
                  <ImageBrush ImageSource="{StaticResource ImageUpdate}"/>
                </Rectangle.OpacityMask>
              </Rectangle>
            </Button>
            <!-- DOWNLOAD BUTTON -->
            <Button Content="{sskk:Image {StaticResource ImageDownload}, 20, 20}" Width="32" Height="32" ToolTipService.IsEnabled="False" Margin="4,0,0,0"
                    ToolTip="{Binding FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipDownload}}"
                    Visibility="{sskk:MultiBinding {Binding CanBeDownloaded}, {Binding CanDelete, Converter={sskk:InvertBool}},
                    Converter={sskk:MultiChained {sskk:AndMultiConverter}, {sskk:VisibleOrCollapsed}}}" Command="{Binding DownloadCommand}">
              <i:Interaction.Behaviors>
                <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                       DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
              </i:Interaction.Behaviors>
            </Button>
            <!-- DELETE BUTTON -->
            <Button Content="{sskk:Image {StaticResource ImageDelete}, 20, 20}" Width="32" Height="32" ToolTipService.IsEnabled="False"
                    ToolTip="{Binding FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipUninstall}}" Margin="4,0,0,0"
                    Visibility="{Binding CanDelete, Converter={sskk:VisibleOrCollapsed}}" Command="{Binding DeleteCommand}">
              <i:Interaction.Behaviors>
                <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                       DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
              </i:Interaction.Behaviors>
            </Button>
            <!-- ALTERNATE VERSIONS -->
            <ToggleButton x:Name="Toggle" Content="{sskk:Image {StaticResource ImageListVersions}, 20, 20}" Width="32" Height="32"
                ToolTipService.IsEnabled="False" ToolTip="Install another version" Margin="4,0,0,0"/>
            <Popup IsOpen="{Binding IsChecked, ElementName=Toggle, Mode=TwoWay}" StaysOpen="False" AllowsTransparency="True">
              <Border Margin="6" Background="{StaticResource ControlBackgroundBrush}"
                BorderBrush="{StaticResource NormalBrush}" BorderThickness="1">
                <Border.Effect>
                  <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                </Border.Effect>
                <Menu ItemsSource="{Binding AlternateVersions}">
                  <Menu.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                  </Menu.ItemsPanel>
                  <Menu.ItemTemplate>
                    <DataTemplate>
                      <MenuItem Header="{Binding FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipSetActiveVersion}}"
                                Command="{Binding SetAsActiveCommand}">
                        <i:Interaction.Behaviors>
                          <sskk:OnEventSetPropertyBehavior EventName="Click" EventOwnerType="MenuItem" Target="{Binding ElementName=Toggle}" Property="ToggleButton.IsChecked" Value="{sskk:False}" />
                        </i:Interaction.Behaviors>
                      </MenuItem>
                    </DataTemplate>
                  </Menu.ItemTemplate>
                </Menu>
              </Border>
            </Popup>
          </StackPanel>
          <!-- RELEASE NOTES BUTTON -->
          <Button Content="{sskk:Image {StaticResource ImageReleaseNotes}, 20, 20}" Width="32" Height="32"
                  ToolTipService.IsEnabled="False" ToolTip="Display release notes for this version"
                  Margin="0,0,4,0" Command="{Binding ReleaseNotes.ToggleCommand}" DockPanel.Dock="Left">
            <i:Interaction.Behaviors>
              <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
            </i:Interaction.Behaviors>
          </Button>
          <Grid>
            <ProgressBar x:Name="ProgressBar" Minimum="0" Maximum="100" Value="{Binding CurrentProgress, Mode=OneWay}"
                         BorderThickness="0" Background="{StaticResource ControlBackgroundBrush}" Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}}"
                         IsIndeterminate="{Binding CurrentProgress, Mode=OneWay, Converter={l:ProgressToIndeterminatedConverter}}"/>
            <TextBlock Text="{Binding CurrentProcessStatus, Mode=OneWay}" Foreground="{StaticResource TextBrush}" HorizontalAlignment="Center"
                       VerticalAlignment="Center" Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}}"/>
            <DockPanel>
              <TextBlock Text="{Binding CurrentProcessStatus, Mode=OneWay}" HorizontalAlignment="Center"
                         VerticalAlignment="Center" Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}}"/>
              <UIElement.Clip>
                <RectangleGeometry>
                  <RectangleGeometry.Rect>
                    <MultiBinding Converter="{l:ProgressToRectConverter}">
                      <Binding ElementName="ProgressBar" Path="ActualWidth"/>
                      <Binding ElementName="ProgressBar" Path="ActualHeight"/>
                      <Binding Path="CurrentProgress"/>
                    </MultiBinding>
                  </RectangleGeometry.Rect>
                </RectangleGeometry>
              </UIElement.Clip>
            </DockPanel>
            <Grid Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}, ConverterParameter={sskk:False}}">
              <Button Command="{Binding SetAsActiveCommand}" ToolTipService.IsEnabled="False"
                      Visibility="{Binding CanDelete, Converter={sskk:VisibleOrHidden}}"
                      ToolTip="{Binding FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipSetActiveVersion}}">
                <i:Interaction.Behaviors>
                  <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                       DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                </i:Interaction.Behaviors>
              </Button>
              <TextBlock HorizontalAlignment="Left" Margin="16,0" IsHitTestVisible="False" Foreground="White" VerticalAlignment="Center">
                  <Run Text="{Binding DisplayName, StringFormat={x:Static r:Strings.VersionButton}, Mode=OneWay}"/>
                  <!-- Careful here, there must not be any space or line-break between the next two Run tags! -->
                  <Run Text="{Binding CanDelete, Converter={sskk:Chained {sskk:InvertBool}, {sskk:BoolToParam}, Parameter2={x:Static r:Strings.VersionButtonUninstalled}},
                       Mode=OneWay}"/><Run Text="{sskk:MultiBinding {Binding CanDelete}, {Binding CanBeDownloaded}, Converter={sskk:MultiChained {sskk:AndMultiConverter},
                       {sskk:BoolToParam}, Parameter1={x:Static r:Strings.VersionButtonUpdateAvailable}}, Mode=OneWay}"/>
              </TextBlock>
            </Grid>
          </Grid>
        </DockPanel>
      </DataTemplate>

      <DataTemplate DataType="{x:Type vm:VsixVersionViewModel}">
        <Grid Height="32" SnapsToDevicePixels="True">
          <ProgressBar x:Name="ProgressBar" Minimum="0" Maximum="100" Value="{Binding CurrentProgress, Mode=OneWay}"
                       BorderThickness="0" Background="{StaticResource ControlBackgroundBrush}" Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}}"
                       IsIndeterminate="{Binding CurrentProgress, Mode=OneWay, Converter={l:ProgressToIndeterminatedConverter}}"/>
          <TextBlock Text="{Binding CurrentProcessStatus, Mode=OneWay}" Foreground="{StaticResource TextBrush}" HorizontalAlignment="Center"
                     VerticalAlignment="Center" Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}}"/>
          <DockPanel>
            <TextBlock Text="{Binding CurrentProcessStatus, Mode=OneWay}" HorizontalAlignment="Center"
                       VerticalAlignment="Center" Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}}"/>
            <UIElement.Clip>
              <RectangleGeometry>
                <RectangleGeometry.Rect>
                  <MultiBinding Converter="{l:ProgressToRectConverter}">
                    <Binding ElementName="ProgressBar" Path="ActualWidth"/>
                    <Binding ElementName="ProgressBar" Path="ActualHeight"/>
                    <Binding Path="CurrentProgress"/>
                  </MultiBinding>
                </RectangleGeometry.Rect>
              </RectangleGeometry>
            </UIElement.Clip>
          </DockPanel>
          <Button Content="{Binding Status}" Command="{Binding ExecuteActionCommand}" ToolTipService.IsEnabled="False"
                  ToolTip="{Binding Status, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipVisualStudioPlugin}}"
                  Visibility="{Binding IsProcessing, Converter={sskk:VisibleOrCollapsed}, ConverterParameter={sskk:False}}">
            <i:Interaction.Behaviors>
              <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding Launcher.CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
            </i:Interaction.Behaviors>
          </Button>
        </Grid>
      </DataTemplate>
    </ResourceDictionary>
  </Window.Resources>
  <Window.Background>
    <ImageBrush ImageSource="{StaticResource ImageBackground}" Stretch="UniformToFill"/>
  </Window.Background>
  <Grid>
    <DockPanel>
      <StatusBar DockPanel.Dock="Bottom" Background="{StaticResource EmphasisButtonBackground}">
        <StatusBar.ItemsPanel>
          <ItemsPanelTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
            </Grid>
          </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem Grid.Column="0">
          <TextBlock Text="{Binding CurrentToolTip}"
                   Margin="8,4" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
        </StatusBarItem>
        <!-- RECONNECT BUTTON -->
        <StatusBarItem Grid.Column="1" HorizontalContentAlignment="Stretch" IsHitTestVisible="True" Focusable="True">
          <Button Style="{StaticResource TransparentButtonStyle}"
                Command="{Binding ReconnectCommand}"
                Cursor="Hand"
                Margin="8,4"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                ToolTip="Click to reconnect..."
                Visibility="{Binding IsOffline, Converter={sskk:VisibleOrHidden}}">
            <TextBlock FontWeight="ExtraBold" Foreground="Gold" Text="Offline" />
          </Button>
        </StatusBarItem>
        <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Stretch">
          <TextBlock Text="{Binding StringFormat=Launcher v{0}, Source={x:Static services:SelfUpdater.Version}}" Margin="8,4" HorizontalAlignment="Right"
                   VerticalAlignment="Center" Foreground="White"/>
        </StatusBarItem>
      </StatusBar>
      <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>

          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

          <!-- FIRST COLUMN -->
          <DockPanel Grid.Row="0" Grid.Column="0" Width="380">
            <Border DockPanel.Dock="Bottom" BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}"
                  Background="{StaticResource TileAlphaBackgroundBrush}">
              <DockPanel Margin="10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" DockPanel.Dock="Bottom" Margin="10">
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}" 
                        CommandParameter="{x:Static r:Urls.Twitter}" SnapsToDevicePixels="True" Margin="2"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}"
                        Content="{sskk:Image {StaticResource ImageTwitter}, 24, 24, NearestNeighbor}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Facebook}" SnapsToDevicePixels="True" Margin="2"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}"
                        Content="{sskk:Image {StaticResource ImageFacebook}, 24, 24, NearestNeighbor}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Reddit}" SnapsToDevicePixels="True" Margin="2"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}"
                        Content="{sskk:Image {StaticResource ImageReddit}, 24, 24, NearestNeighbor}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Patreon}" SnapsToDevicePixels="True" Margin="2"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}"
                        Content="{sskk:Image {StaticResource ImagePatreon}, 24, 24, NearestNeighbor}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                  </Button>
                  <!--<Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="https://www.google.com/" SnapsToDevicePixels="True" Margin="2"
                        Content="{sskk:Image {StaticResource ImageGooglePlus}, 24, 24, NearestNeighbor}">
                </Button>
                <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="https://www.youtube.com/user/XenkoCSG/" SnapsToDevicePixels="True" Margin="2"
                        Content="{sskk:Image {StaticResource ImageYoutube}, 24, 24, NearestNeighbor}">
                </Button>
                <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="https://www.twitch.tv/" SnapsToDevicePixels="True" Margin="2"
                        Content="{sskk:Image {StaticResource ImageTwitch}, 24, 24, NearestNeighbor}">
                </Button>-->
                </StackPanel>
                <UniformGrid Columns="2">
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Issues}"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                    <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True">
                      <Image Margin="5" Source="{StaticResource ImageIssues}" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="16" Height="16"/>
                      <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="{x:Static r:Strings.ButtonIssues}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Forums}"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                    <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True">
                      <Image Margin="5" Source="{StaticResource ImageForums}" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="16" Height="16"/>
                      <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="{x:Static r:Strings.ButtonForums}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Discord}"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                    <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True">
                      <Image Margin="5" Source="{StaticResource ImageChat}" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="16" Height="16"/>
                      <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="{x:Static r:Strings.ButtonDiscord}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Github}"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                    <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True">
                      <Image Margin="5" Source="{StaticResource ImageGithub}" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="16" Height="16"/>
                      <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="{x:Static r:Strings.ButtonGithub}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Button>
                  <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Left"
                        Command="{Binding OpenUrlCommand}"
                        CommandParameter="{x:Static r:Urls.Roadmap}"
                        ToolTipService.IsEnabled="False"
                        ToolTip="{Binding CommandParameter, RelativeSource={RelativeSource Self}, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipOpenLink}}">
                    <i:Interaction.Behaviors>
                      <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                     DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                    </i:Interaction.Behaviors>
                    <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True">
                      <Image Margin="5" Source="{StaticResource ImageRoadmap}" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="16" Height="16"/>
                      <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="{x:Static r:Strings.ButtonRoadmap}" VerticalAlignment="Center"/>
                    </StackPanel>
                  </Button>
                </UniformGrid>
              </DockPanel>
            </Border>
            <DockPanel>
              <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}" DockPanel.Dock="Top">
                <StackPanel>
                  <Grid Height="48">
                    <!-- Launch game studio -->
                    <Button IsEnabled="{sskk:MultiBinding {Binding ActiveVersion.IsProcessing, Converter={sskk:InvertBool}},
                          {Binding StartStudioCommand.IsEnabled}, Converter={sskk:AndMultiConverter}}"
                          Command="{Binding StartStudioCommand}" Content="{Binding ActiveVersion.FullName}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextBlock.FontSize="24"
                          ContentStringFormat="{x:Static r:Strings.StartVersion}" Background="{StaticResource EmphasisButtonBackground}" ToolTipService.IsEnabled="False"
                          Visibility="{Binding ActiveVersion.CanStart, Converter={sskk:VisibleOrCollapsed}}"
                          ToolTip="{Binding ActiveVersion.FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipStartButton}}">
                      <Button.Resources>
                        <!-- ReSharper disable once Xaml.RedundantResource - Overriding hovered color from theme-->
                        <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource EmphasisButtonHoverColor}"/>
                      </Button.Resources>
                      <i:Interaction.Behaviors>
                        <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                                               DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                      </i:Interaction.Behaviors>
                    </Button>
                    <!-- Install specific version -->
                    <Button IsEnabled="{sskk:MultiBinding {Binding ActiveVersion.IsProcessing, Converter={sskk:InvertBool}},
                          {Binding ActiveVersion.DownloadCommand.IsEnabled}, Converter={sskk:AndMultiConverter}}"
                          Command="{Binding ActiveVersion.DownloadCommand}" Content="{Binding ActiveVersion.FullName}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextBlock.FontSize="24"
                          ContentStringFormat="{x:Static r:Strings.InstallVersion}" Background="{StaticResource EmphasisButtonBackground}" ToolTipService.IsEnabled="False"
                          Visibility="{sskk:MultiBinding {Binding ActiveVersion.DownloadCommand.IsEnabled}, {Binding ActiveVersion.CanStart, Converter={sskk:InvertBool}}, Converter={sskk:MultiChained {sskk:AndMultiConverter}, {sskk:VisibleOrCollapsed}}}"
                          ToolTip="{Binding ActiveVersion.FullName, Converter={sskk:FormatString}, ConverterParameter={x:Static r:Strings.ToolTipDownload}}">
                      <Button.Resources>
                        <!-- ReSharper disable once Xaml.RedundantResource - Overriding hovered color from theme-->
                        <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource EmphasisButtonHoverColor}"/>
                      </Button.Resources>
                      <i:Interaction.Behaviors>
                        <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                                               DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                      </i:Interaction.Behaviors>
                    </Button>
                    <!-- Install latest version (nothing installed) -->
                    <Button IsEnabled="{sskk:MultiBinding {Binding IsSynchronizing, Converter={sskk:InvertBool}},
                          {Binding InstallLatestVersionCommand.IsEnabled}, Converter={sskk:AndMultiConverter}}"
                          Command="{Binding InstallLatestVersionCommand}" Content="{x:Static r:Strings.InstallLatestVersion}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextBlock.FontSize="24"
                          Background="{StaticResource EmphasisButtonBackground}" ToolTipService.IsEnabled="False"
                          Visibility="{Binding ActiveVersion, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}}"
                          ToolTip="{x:Static r:Strings.ToolTipInstallLatestVersion}">
                      <Button.Resources>
                        <!-- ReSharper disable once Xaml.RedundantResource - Overriding hovered color from theme-->
                        <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource EmphasisButtonHoverColor}"/>
                      </Button.Resources>
                      <i:Interaction.Behaviors>
                        <sskk:BindCurrentToolTipStringBehavior ToolTipTarget="{Binding CurrentToolTip}"
                                                                               DefaultValue="{x:Static r:Strings.ToolTipDefault}"/>
                      </i:Interaction.Behaviors>
                    </Button>
                  </Grid>
                  <CheckBox Margin="0,5" DockPanel.Dock="Bottom" IsChecked="{Binding AutoCloseLauncher}"
                                      Content="{x:Static r:Strings.AutoCloseLauncher}"/>
                </StackPanel>
              </Border>
              <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}" DockPanel.Dock="Top">
                <DockPanel Height="32" Margin="10,0">
                  <Image Source="{StaticResource ImageSwitchVersion}" Width="26" Height="26" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"/>
                  <TextBlock Margin="10,0,0,0" Text="{x:Static r:Strings.SwitchOrUpdateVersion}" FontSize="24" TextAlignment="Left" VerticalAlignment="Center"/>
                </DockPanel>
              </Border>
              <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}"
                                Background="{StaticResource TileAlphaBackgroundBrush}" DockPanel.Dock="Bottom">
                <ContentControl Content="{Binding VsixPackage}"/>
              </Border>
              <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}" DockPanel.Dock="Bottom">
                <DockPanel Height="32" Margin="10,0">
                  <Image Source="{StaticResource ImageVisualStudio}" Width="26" Height="26" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"/>
                  <TextBlock Margin="10,0,0,0" Text="{x:Static r:Strings.VisualStudioPlugin}" FontSize="24" TextAlignment="Left" VerticalAlignment="Center"/>
                </DockPanel>
              </Border>
              <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}"
                            Background="Transparent">
                <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalAlignment="Top">
                  <StackPanel>
                    <ItemsControl ItemsSource="{Binding XenkoVersions}" Margin="0,-2"/>
                    <ProgressBar Height="24" Margin="0,2" IsIndeterminate="True" Opacity="0.5"
                                                    Visibility="{Binding IsSynchronizing, Converter={sskk:VisibleOrCollapsed}}"/>
                    <ToggleButton Style="{StaticResource TransparentButtonStyle}" IsChecked="{Binding ShowBetaVersions}" Margin="0,6" Content="{Binding}">
                      <ToggleButton.ContentTemplate>
                        <DataTemplate>
                          <TextBlock x:Name="TextBlock" Text="{x:Static r:Strings.ToggleShowBetaVersions}"></TextBlock>
                          <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding ShowBetaVersions}" Value="True">
                              <Setter Property="Text" TargetName="TextBlock" Value="{x:Static r:Strings.ToggleHideBetaVersions}"/>
                            </DataTrigger>
                          </DataTemplate.Triggers>
                        </DataTemplate>                      
                      </ToggleButton.ContentTemplate>
                    </ToggleButton>
                  </StackPanel>
                </ScrollViewer>
              </Border>
            </DockPanel>
          </DockPanel>

          <Grid Grid.Column="1" Grid.Row="0" Tag="{sskk:Double 0}" IsEnabled="{Binding ActiveReleaseNotes.IsActive, Converter={sskk:InvertBool}, FallbackValue={sskk:True}}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform X="{sskk:MultiBinding {Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid},
                                                                  Converter={sskk:SumNum}, ConverterParameter={StaticResource ReleaseNotesMargin}},
                                               {Binding Tag, RelativeSource={RelativeSource AncestorType=Grid}}, Converter={sskk:MultiplyMultiConverter}}"/>
            </Grid.RenderTransform>
            <Grid.Style>
              <Style TargetType="Grid">
                <Style.Triggers>
                  <Trigger Property="Grid.IsEnabled" Value="False">
                    <Trigger.EnterActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation From="0" To="1" Duration="0:0:0.5" AccelerationRatio="0.2" DecelerationRatio="0.1" Storyboard.TargetProperty="Tag"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation From="1" To="0" Duration="0:0:0.5" AccelerationRatio="0.2" DecelerationRatio="0.1" Storyboard.TargetProperty="Tag"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.ExitActions>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>

            <!-- SECOND COLUMN -->
            <Border Grid.Row="0" Grid.Column="0">
              <DockPanel>
                <Border DockPanel.Dock="Top" BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}">
                  <DockPanel Height="48" Margin="10,0">
                    <Image Source="{StaticResource ImageProjects}" Width="26" Height="26" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"/>
                    <TextBlock Margin="10,0,0,0" Text="{x:Static r:Strings.Projects}" FontSize="24" TextAlignment="Left" VerticalAlignment="Center"/>
                  </DockPanel>
                </Border>
                <Border DockPanel.Dock="Top" BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}"
                                    Background="{StaticResource TileAlphaBackgroundBrush}"
                                    Visibility="{Binding RecentProjects.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}}">
                  <TextBlock Text="{x:Static r:Strings.NoProjectCreated}" FontSize="16" Margin="20" TextAlignment="Center"/>
                </Border>
                <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}">
                  <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Style>
                      <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="ScrollViewer">
                        <Style.Triggers>
                          <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Padding" Value="0,0,15,0"/>
                          </Trigger>
                        </Style.Triggers>
                      </Style>
                    </ScrollViewer.Style>
                    <ItemsControl ItemsSource="{Binding RecentProjects}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileListBorderThickness}">
                            <Button Command="{Binding OpenCommand}" IsEnabled="{Binding Launcher.StartStudioCommand.IsEnabled}"
                                    HorizontalContentAlignment="Stretch" Background="{StaticResource TileAlphaBackgroundBrush}">
                              <DockPanel Margin="10,5">
                                <DockPanel DockPanel.Dock="Bottom">
                                  <!-- Update dropdown -->
                                  <ToggleButton x:Name="Toggle" Visibility="{Binding CompatibleVersions.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}}"
                                                DockPanel.Dock="Right" Content="{sskk:Image {StaticResource ImageUpgrade}, 16, 16}" Margin="4,0,0,0" Width="20" Height="20"
                                                ToolTip="{x:Static r:Strings.ToolTipOpenAndUpgradeProject}" SnapsToDevicePixels="True"/>
                                  <Popup IsOpen="{Binding ElementName=Toggle, Path=IsChecked}" StaysOpen="False" PlacementTarget="{Binding ElementName=Toggle}">
                                    <ScrollViewer Background="{StaticResource BackgroundBrush}" MinWidth="150" MaxHeight="400" VerticalScrollBarVisibility="Auto" BorderBrush="Black" BorderThickness="1">
                                      <ItemsControl ItemsSource="{Binding CompatibleVersions}" Margin="5">
                                        <ItemsControl.ItemTemplate>
                                          <DataTemplate>
                                            <Button Background="Transparent" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Click="OpenWithClicked"
                                                    Content="{Binding DisplayName}" ContentStringFormat="{x:Static r:Strings.OpenProjectWithVersion}" CommandParameter="{Binding}"
                                                    Command="{Binding DataContext.OpenWithCommand, RelativeSource={RelativeSource AncestorType=ScrollViewer}}" Padding="5,2"/>
                                          </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                      </ItemsControl>
                                    </ScrollViewer>
                                  </Popup>
                                  <sskk:TextBox DockPanel.Dock="Bottom" IsReadOnly="True" Text="{Binding FullPath, Mode=OneWay}" Margin="0,10,0,0"
                                                Foreground="{StaticResource TextBrush}" FontStyle="Italic" Background="Transparent" Focusable="False"
                                                BorderThickness="0" sskk:Trimming.TextTrimming="WordEllipsis" sskk:Trimming.TrimmingSource="Middle" sskk:Trimming.WordSeparators="\/" x:Name="RecentTextBox"/>
                                </DockPanel>
                                <DockPanel>
                                  <!-- Discovering -->
                                  <TextBlock Text="{Binding XenkoVersionName}" FontSize="14"
                                             Foreground="{StaticResource TextBrush}" HorizontalAlignment="Right" DockPanel.Dock="Right"
                                             Visibility="{Binding XenkoVersionName, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:VisibleOrCollapsed}}}"/>
                                  <!-- Unknown -->
                                  <TextBlock Text="{x:Static r:Strings.UnknownVersion}" FontSize="14"
                                             DockPanel.Dock="Right" Foreground="{StaticResource TextBrush}" HorizontalAlignment="Right" Margin="0,3"
                                             Visibility="{Binding XenkoVersionName, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}}"/>
                                  <TextBlock FontSize="16" FontWeight="Bold" Text="{Binding Name}" Foreground="{StaticResource TextBrush}"/>
                                </DockPanel>
                              </DockPanel>
                            </Button>
                            <Border.ContextMenu>
                              <ContextMenu>
                                <MenuItem Header="{x:Static r:Strings.ShowInExplorer}" Command="{Binding ExploreCommand}" />
                                <MenuItem Header="{x:Static r:Strings.RemoveFromList}" Command="{Binding RemoveCommand}" />
                              </ContextMenu>
                            </Border.ContextMenu>
                          </Border>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </ScrollViewer>
                </Border>
              </DockPanel>
            </Border>

            <!-- THIRD COLUMN -->
            <Border Grid.Row="0" Grid.Column="1" BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileBorderThickness}">
              <TabControl Background="{x:Null}" x:Name="TabControl" SelectionChanged="SelectedTabChanged">
                <TabItem Header="{x:Static r:Strings.TabGettingStarted}">
                  <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Style>
                      <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="ScrollViewer">
                        <Style.Triggers>
                          <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Padding" Value="0,0,15,0"/>
                          </Trigger>
                        </Style.Triggers>
                      </Style>
                    </ScrollViewer.Style>
                    <StackPanel>
                      <Border Background="{StaticResource TileAlphaBackgroundBrush}"
                                            Visibility="{Binding ActiveDocumentationPages.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}, FallbackValue={sskk:Collapsed}}">
                        <TextBlock Text="{x:Static r:Strings.NoDocumentation}" FontSize="16" Margin="20" TextAlignment="Center" VerticalAlignment="Center"/>
                      </Border>
                      <ItemsControl ItemsSource="{Binding ActiveDocumentationPages}">
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileListBorderThickness}">
                              <Button Background="{StaticResource TileAlphaBackgroundBrush}" Command="{Binding OpenUrlCommand}" HorizontalContentAlignment="Stretch">
                                <DockPanel Margin="5">
                                  <TextBlock Margin="0,3" FontSize="16" DockPanel.Dock="Top" Text="{Binding Title}" HorizontalAlignment="Left"/>
                                  <TextBlock Margin="0,3" Text="{Binding Description}" Foreground="{StaticResource TextBrush}" TextWrapping="Wrap"/>
                                </DockPanel>
                              </Button>
                            </Border>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                    </StackPanel>
                  </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static r:Strings.TabNews}">
                  <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Style>
                      <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="ScrollViewer">
                        <Style.Triggers>
                          <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Padding" Value="0,0,15,0"/>
                          </Trigger>
                        </Style.Triggers>
                      </Style>
                    </ScrollViewer.Style>
                    <StackPanel>
                      <Border Background="{StaticResource TileAlphaBackgroundBrush}"
                                            Visibility="{Binding NewsPages.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}, FallbackValue={sskk:Collapsed}}">
                        <TextBlock Text="{x:Static r:Strings.NoNews}" FontSize="16" Margin="20" TextAlignment="Center" VerticalAlignment="Center"/>
                      </Border>
                      <ItemsControl ItemsSource="{Binding NewsPages}">
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Border BorderBrush="{StaticResource TileBorderBrush}" BorderThickness="{StaticResource TileListBorderThickness}">
                              <Button Command="{Binding OpenUrlCommand}" HorizontalContentAlignment="Stretch" Background="{StaticResource TileAlphaBackgroundBrush}">
                                <DockPanel Margin="5">
                                  <TextBlock Margin="0,3" FontSize="16" DockPanel.Dock="Top" Text="{Binding Title}" HorizontalAlignment="Left" TextWrapping="Wrap"/>
                                  <TextBlock Margin="0,8,0,3" Text="{Binding Date, StringFormat={x:Static r:Strings.NewsDate}}" Foreground="{StaticResource TextBrush}" HorizontalAlignment="Right"/>
                                </DockPanel>
                              </Button>
                            </Border>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                    </StackPanel>
                  </ScrollViewer>
                </TabItem>
                <TabControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <UniformGrid Rows="1" Height="32" Margin="{StaticResource TabHeaderMargin}"/>
                  </ItemsPanelTemplate>
                </TabControl.ItemsPanel>
              </TabControl>
            </Border>
          </Grid>

          <Grid Grid.Column="1" Grid.Row="0" Tag="{sskk:Double 1}" IsEnabled="{Binding ActiveReleaseNotes.IsActive, FallbackValue={sskk:False}}">
            <DockPanel Background="{StaticResource TileAlphaBackgroundBrush}" Margin="{StaticResource TileBorderThickness}">
              <DockPanel DockPanel.Dock="Top">
                <Button Content="{sskk:Image {StaticResource ImageCloseWindow}, 16, 16, NearestNeighbor}" DockPanel.Dock="Right" Margin="15,8"
                                Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Right" Command="{Binding ActiveReleaseNotes.ToggleCommand}"/>
                <TextBlock Margin="15,8" Text="{Binding ActiveReleaseNotes.Version, StringFormat=Release notes of version {0}}" FontSize="20" FontWeight="Bold"/>
              </DockPanel>
              <Grid>
                <!-- BaseUrl must be set before Text so when ActiveReleaseNotes is updated, the binding of ImageBaseUrl is updated first,
                    then MarkdownContent is updated and the text converted, we will have a valid path for relative urls -->
                <sskk:MarkdownTextBlock BaseUrl="{Binding ActiveReleaseNotes.BaseUrl, Mode=OneWay}" HyperlinkCommand="{x:Static l:Commands.OpenHyperlinkCommand}"
                                        Text="{Binding ActiveReleaseNotes.MarkdownContent}" Background="Transparent" x:Name="ReleaseNotesPanel"                                        
                                        Margin="{StaticResource TileBorderThickness}" Visibility="{Binding ActiveReleaseNotes.IsLoaded, Converter={sskk:VisibleOrCollapsed}}"/>
                <TextBlock Text="{x:Static r:Strings.NoReleaseNotes}" TextWrapping="Wrap" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Visibility="{Binding ActiveReleaseNotes.IsUnavailable, Converter={sskk:VisibleOrCollapsed}}"/>
                <TextBlock Text="{x:Static r:Strings.DownloadingReleaseNotes}" TextWrapping="Wrap" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Visibility="{Binding ActiveReleaseNotes.IsLoading, Converter={sskk:VisibleOrCollapsed}}"/>
              </Grid>
            </DockPanel>
            <Grid.RenderTransform>
              <TranslateTransform X="{sskk:MultiBinding {Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid},
                                                                  Converter={sskk:SumNum}, ConverterParameter={StaticResource ReleaseNotesMargin}},
                                               {Binding Tag, RelativeSource={RelativeSource AncestorType=Grid}}, Converter={sskk:MultiplyMultiConverter}}"/>
            </Grid.RenderTransform>
            <Grid.Style>
              <Style TargetType="Grid">
                <Style.Triggers>
                  <Trigger Property="Grid.IsEnabled" Value="True">
                    <Trigger.EnterActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation From="1" To="0" Duration="0:0:0.5" AccelerationRatio="0.2" DecelerationRatio="0.1" Storyboard.TargetProperty="Tag"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation From="0" To="1" Duration="0:0:0.5" AccelerationRatio="0.2" DecelerationRatio="0.1" Storyboard.TargetProperty="Tag"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.ExitActions>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
          </Grid>
        </Grid>
      </Border>
    </DockPanel>
    <Border Visibility="{Binding Announcement, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:VisibleOrCollapsed}}}">
      <l:Announcement DataContext="{Binding Announcement}"/>
    </Border>
  </Grid>
</Window>
