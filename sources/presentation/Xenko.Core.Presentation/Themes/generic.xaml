<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:Xenko.Core.Presentation.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:cvt="clr-namespace:Xenko.Core.Presentation.ValueConverters"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:interactivity="clr-namespace:Xenko.Core.Presentation.Interactivity"
                    xmlns:behaviors="clr-namespace:Xenko.Core.Presentation.Behaviors"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:xk="http://schemas.xenko.com/xaml/presentation"
                    mc:Ignorable="d">

  <!--<Style TargetType="{x:Type ctrl:PropertyGrid}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:PropertyGrid}">
          <ScrollViewer
          HorizontalScrollBarVisibility="Disabled"
          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
            <ItemsPresenter/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

  <SolidColorBrush x:Key="RedBrush" Color="#FFDC4E4E" />
  <SolidColorBrush x:Key="GreenBrush" Color="#FF65C36A" />
  <SolidColorBrush x:Key="BlueBrush" Color="#FF3F74D1" />
  <SolidColorBrush x:Key="AlphaBrush" Color="#FFBCBCBC" />

  <!-- ### EditableListBox ################################################################################################################################################# -->
  <SolidColorBrush x:Key="GlyphBrush" Color="Black" />

  <Style x:Key="PropertyExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="Padding" Value="10,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Border Visibility="Collapsed" x:Name="ExpandSite" Padding="0">
              <Border BorderThickness="0" Margin="0" Padding="0" VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Focusable="false" />
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ctrl:PropertyView">
    <!-- TODO: Replace DynamicResource by StaticResource once it is stylized in the correct theme -->
    <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ctrl:PropertyView">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}" Name="Bd" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="_pv_scrollviewer_" CanContentScroll="False"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Background="{TemplateBinding Panel.Background}" Padding="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Panel.Background"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ctrl:PropertyViewItem">
    <Setter Property="Increment" Value="15" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <!--<Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ctrl:PropertyViewItem">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}" Name="Bd" SnapsToDevicePixels="True">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <ToggleButton IsChecked="False" ClickMode="Press" Name="Expander">
                <ToggleButton.Style>
                  <Style TargetType="ToggleButton">
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                          <Border Padding="5,5,5,5" Background="#FFFFFFFF" Width="16" Height="16">
                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                              <Path.Data>
                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                              </Path.Data>
                              <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                              </Path.RenderTransform>
                            </Path>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                <Setter.Value>
                                  <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                              </Setter>
                              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ToggleButton.Style>
              </ToggleButton>
              <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}"
                                  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                  ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                  ContentSource="Header" Name="PART_Header"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Expander x:Name="propertyExpander" Grid.Row="1" IsExpanded="{TemplateBinding IsExpanded}"
                          Style="{StaticResource PropertyExpanderStyle}" IsEnabled="True">
                  <ItemsPresenter Name="ItemsHost" Grid.Row="1" />
                </Expander>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>-->
  </Style>

  <Style x:Key="DefaultTextBoxStyle" TargetType="ctrl:TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ctrl:TextBox">
          <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}"
                             BorderBrush="{TemplateBinding Border.BorderBrush}"
                             BorderThickness="{TemplateBinding Border.BorderThickness}"
                             RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                             RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd"
                             SnapsToDevicePixels="True">
            <Grid Focusable="False">
              <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Padding="{TemplateBinding Padding}"
                            Visibility="{TemplateBinding IsFocused, Converter={cvt:VisibleOrCollapsed}}" />
              <ContentControl x:Name="Watermark" Content="{TemplateBinding WatermarkContent}"
                              ContentTemplate="{TemplateBinding WatermarkContentTemplate}" VerticalAlignment="Center"
                              Margin="6,2,2,2" Focusable="False" />
              <TextBlock x:Name="PART_TrimmedText" Text="{TemplateBinding TrimmedText}" Cursor="IBeam" Margin="3,1"
                         Focusable="False"
                         Visibility="{TemplateBinding IsFocused, Converter={cvt:Chained {cvt:InvertBool}, {cvt:VisibleOrCollapsed}}}"
                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
          </mwt:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="HasText" Value="True">
              <Setter TargetName="Watermark" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Panel.Background"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Setter Property="TextElement.Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              <Setter TargetName="PART_TrimmedText" Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="WatermarkContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding Mode=OneTime}" IsHitTestVisible="False" FontStyle="Italic" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ctrl:TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}" />

  <Style TargetType="ctrl:NumericTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ctrl:NumericTextBox">
          <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}"
                             BorderBrush="{TemplateBinding Border.BorderBrush}"
                             BorderThickness="{TemplateBinding Border.BorderThickness}"
                             RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                             RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd"
                             SnapsToDevicePixels="True">
            <DockPanel LastChildFill="True" Focusable="False">
              <UniformGrid x:Name="upDownButtons" Rows="2" DockPanel.Dock="Right" Focusable="False"
                           Visibility="Collapsed" MaxWidth="20">
                <RepeatButton x:Name="PART_IncreaseButton"
                              Command="{x:Static ctrl:NumericTextBox.SmallIncreaseCommand}">
                  <Grid Margin="0" Background="Transparent">
                    <Path HorizontalAlignment="Stretch" Width="Auto" Height="Auto" Fill="{StaticResource GlyphBrush}"
                          Stretch="Uniform" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1"
                          Data="M-2,1 L2,1 0,-1 z" />
                  </Grid>
                </RepeatButton>
                <RepeatButton x:Name="PART_DecreaseButton"
                              Command="{x:Static ctrl:NumericTextBox.SmallDecreaseCommand}">
                  <Grid Margin="0" Background="Transparent">
                    <Path HorizontalAlignment="Stretch" Width="Auto" Height="Auto" Fill="{StaticResource GlyphBrush}"
                          Stretch="Uniform" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1"
                          Data="M2,-1 L-2,-1 0,1 z" />
                  </Grid>
                </RepeatButton>
              </UniformGrid>
              <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Padding="{TemplateBinding Padding}" />
            </DockPanel>
          </mwt:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="DisplayUpDownButtons" Value="True">
              <Setter TargetName="upDownButtons" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="Panel.Background"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Setter Property="TextElement.Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="interactivity:Interaction.Behaviors">
      <Setter.Value>
        <interactivity:BehaviorCollection>
          <behaviors:NumericTextBoxDragBehavior UsePreviewEvents="True" />
        </interactivity:BehaviorCollection>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<Style TargetType="{x:Type ctrl:DoublePaneContainer}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:DoublePaneContainer}">
          <layout:DoublePaneGrid Focusable="False" Background="{TemplateBinding Background}">
            <ContentPresenter ContentSource="Header" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                              Focusable="False" />
            <ContentPresenter ContentSource="Content" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                              Focusable="False" />
          </layout:DoublePaneGrid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

  <Style TargetType="{x:Type ctrl:ColorPicker}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="InputColumnWidth" Value="120" />
    <Setter Property="PickupAreaSize" Value="160, 160" />
    <Setter Property="StripsHeight" Value="22" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:ColorPicker}">
          <Grid x:Name="RootLayout" VerticalAlignment="Top" Focusable="False">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="{TemplateBinding InputColumnWidth}" />
            </Grid.ColumnDefinitions>
            <Grid x:Name="LeftPaneLayout" Margin="2" VerticalAlignment="Top" Focusable="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Canvas x:Name="PART_HuePickerRenderSurface"
                      Width="{Binding PickupAreaSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                      Height="{TemplateBinding StripsHeight}">
                <Canvas.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="Red" Offset="0.0" />
                    <GradientStop Color="Yellow" Offset="0.166666666667" />
                    <GradientStop Color="Lime" Offset="0.333333333333" />
                    <GradientStop Color="Cyan" Offset="0.5" />
                    <GradientStop Color="Blue" Offset="0.666666666667" />
                    <GradientStop Color="Fuchsia" Offset="0.88888888883" />
                    <GradientStop Color="Red" Offset="1.0" />
                  </LinearGradientBrush>
                </Canvas.Background>
                <Rectangle x:Name="PART_HuePickerSelector" Height="{TemplateBinding StripsHeight}" Width="2">
                  <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="Black" Offset="0" />
                      <GradientStop Color="White" Offset="1" />
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
              </Canvas>
              <Canvas Width="{Binding PickupAreaSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                      Grid.Row="1" Margin="2"
                      Height="{Binding PickupAreaSize.Height, RelativeSource={RelativeSource TemplatedParent}}"
                      Focusable="False">
                <Rectangle x:Name="PART_ColorPickerRenderSurface" Fill="White" StrokeThickness="0"
                           VerticalAlignment="Top" HorizontalAlignment="Left"
                           Width="{Binding PickupAreaSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                           Focusable="False"
                           Height="{Binding PickupAreaSize.Height, RelativeSource={RelativeSource TemplatedParent}}"
                           Margin="0" />
                <Canvas x:Name="PART_ColorPickerSelector" Width="0" Height="0" Focusable="False">
                  <Ellipse Width="10" Height="10" Canvas.Left="-5" Canvas.Top="-5" StrokeThickness="2"
                           Focusable="False">
                    <Ellipse.Stroke>
                      <LinearGradientBrush EndPoint="0,0" StartPoint="1,1">
                        <GradientStop Color="Black" Offset="0" />
                        <GradientStop Color="White" Offset="1" />
                      </LinearGradientBrush>
                    </Ellipse.Stroke>
                  </Ellipse>
                </Canvas>
              </Canvas>
              <Grid Height="21" Margin="2" Grid.Row="2" Focusable="False">
                <Rectangle Focusable="False">
                  <Rectangle.Fill>
                    <DrawingBrush Viewport="0,0,14,14" TileMode="Tile" ViewportUnits="Absolute">
                      <DrawingBrush.Drawing>
                        <DrawingGroup>
                          <GeometryDrawing Brush="White">
                            <GeometryDrawing.Geometry>
                              <RectangleGeometry Rect="0,0,2,2" />
                            </GeometryDrawing.Geometry>
                          </GeometryDrawing>
                          <GeometryDrawing Brush="Black">
                            <GeometryDrawing.Geometry>
                              <GeometryGroup>
                                <RectangleGeometry Rect="0,0,1,1" />
                                <RectangleGeometry Rect="1,1,1,1" />
                              </GeometryGroup>
                            </GeometryDrawing.Geometry>
                          </GeometryDrawing>
                        </DrawingGroup>
                      </DrawingBrush.Drawing>
                    </DrawingBrush>
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle x:Name="PART_ColorPreviewRenderSurface" Focusable="False" />
              </Grid>
            </Grid>
            <Grid x:Name="RightPaneGrid" Grid.Column="1" Margin="2" Focusable="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
              </Grid.RowDefinitions>
              <GroupBox Header="RGBA" VerticalAlignment="Top" Grid.Column="0" HorizontalContentAlignment="Stretch"
                        BorderThickness="0" Margin="2" Focusable="False">
                <ctrl:KeyValueGrid x:Name="RGBGrid" HorizontalAlignment="Stretch" Focusable="False">
                  <TextBlock Margin="4,0" Text="{xk:Localize R:, Context=RGBA}"
                             ToolTipService.ToolTip="{xk:Localize Red, Context=ToolTip}" VerticalAlignment="Center"
                             HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2">
                    <ctrl:NumericTextBox x:Name="RedTextBox"
                                         Value="{Binding Red, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         SelectionBrush="{StaticResource RedBrush}" Minimum="0" Maximum="255"
                                         Margin="0" MouseValidationTrigger="OnMouseMove" />
                    <Rectangle Height="3" Fill="{StaticResource RedBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=RedTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                  <TextBlock Margin="4,0" Text="{xk:Localize G:, Context=RGBA}"
                             ToolTipService.ToolTip="{xk:Localize Green, Context=ToolTip}" VerticalAlignment="Center"
                             HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2">
                    <ctrl:NumericTextBox x:Name="GreenTextBox"
                                         Value="{Binding Green, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         SelectionBrush="{StaticResource GreenBrush}" Minimum="0" Maximum="255"
                                         Margin="0" MouseValidationTrigger="OnMouseMove" />
                    <Rectangle Height="3" Fill="{StaticResource GreenBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=GreenTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                  <TextBlock Margin="4,0" Text="{xk:Localize B:, Context=RGBA}"
                             ToolTipService.ToolTip="{xk:Localize Blue, Context=ToolTip}" VerticalAlignment="Center"
                             HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2">
                    <ctrl:NumericTextBox x:Name="BlueTextBox"
                                         Value="{Binding Blue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         SelectionBrush="{StaticResource BlueBrush}" Minimum="0" Maximum="255"
                                         Margin="0" MouseValidationTrigger="OnMouseMove" />
                    <Rectangle Height="3" Fill="{StaticResource BlueBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=BlueTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                  <TextBlock x:Name="AlphaTextBlock" Margin="4,0" Text="{xk:Localize A:, Context=RGBA}"
                             ToolTipService.ToolTip="{xk:Localize Alpha, Context=ToolTip}" VerticalAlignment="Center"
                             HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2" x:Name="AlphaValue">
                    <ctrl:NumericTextBox x:Name="AlphaTextBox"
                                         Value="{Binding Alpha, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         SelectionBrush="{StaticResource AlphaBrush}" Minimum="0" Maximum="255"
                                         Margin="0" />
                    <Rectangle Height="3" Fill="{StaticResource AlphaBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=AlphaTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                </ctrl:KeyValueGrid>
              </GroupBox>
              <GroupBox Header="HSB" VerticalAlignment="Top" d:LayoutOverrides="Width" BorderThickness="0" Grid.Row="1"
                        Margin="2" Focusable="False">
                <ctrl:KeyValueGrid Focusable="False">
                  <TextBlock Margin="4,0" Text="{xk:Localize H:, Context=HSB}"
                             ToolTipService.ToolTip="{xk:Localize Hue, Context=ToolTip}" VerticalAlignment="Center"
                             HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2">
                    <ctrl:NumericTextBox x:Name="HueTextBox"
                                         Value="{Binding Hue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         DecimalPlaces="0" SelectionBrush="{StaticResource AlphaBrush}" Minimum="0"
                                         Maximum="360" Margin="0" MouseValidationTrigger="OnMouseMove" />
                    <Rectangle Height="3" Fill="{StaticResource AlphaBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=HueTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                  <TextBlock Margin="4,0" Text="{xk:Localize S:, Context=HSB}"
                             ToolTipService.ToolTip="{xk:Localize Saturation, Context=ToolTip}"
                             VerticalAlignment="Center" HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2">
                    <ctrl:NumericTextBox x:Name="SaturationTextBox"
                                         Value="{Binding Saturation, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         DecimalPlaces="0" SelectionBrush="{StaticResource AlphaBrush}" Minimum="0"
                                         Maximum="100" Margin="0" MouseValidationTrigger="OnMouseMove" />
                    <Rectangle Height="3" Fill="{StaticResource AlphaBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=SaturationTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                  <TextBlock Margin="4,0" Text="{xk:Localize B:, Context=HSB}"
                             ToolTipService.ToolTip="{xk:Localize Value, Context=ToolTip}" VerticalAlignment="Center"
                             HorizontalAlignment="Left" Focusable="False" />
                  <StackPanel Margin="0,2">
                    <ctrl:NumericTextBox x:Name="BrightnessTextBox"
                                         Value="{Binding Brightness, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         DecimalPlaces="0" SelectionBrush="{StaticResource AlphaBrush}" Minimum="0"
                                         Maximum="100" Margin="0" MouseValidationTrigger="OnMouseMove" />
                    <Rectangle Height="3" Fill="{StaticResource AlphaBrush}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Bottom">
                      <Rectangle.RenderTransform>
                        <ScaleTransform ScaleX="{Binding ValueRatio, ElementName=BrightnessTextBox}" />
                      </Rectangle.RenderTransform>
                    </Rectangle>
                  </StackPanel>
                </ctrl:KeyValueGrid>
              </GroupBox>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ShowAlpha" Value="False">
              <Setter TargetName="AlphaTextBlock" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="AlphaValue" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ctrl:FilteringComboBox">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Sort">
      <Setter.Value>
        <ctrl:FilteringComboBoxSort />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:FilteringComboBox}">
          <Grid>
            <ctrl:TextBox x:Name="PART_EditableTextBox" ValidateOnLostFocus="False" VerticalAlignment="Center"
                          Focusable="True"
                          WatermarkContent="{Binding WatermarkContent, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}}"
                          Text="{Binding Text, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}, UpdateSourceTrigger=PropertyChanged}"
                          IsEnabled="{TemplateBinding IsEnabled}" CancelWithEscape="False" />
            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False"
                   AllowsTransparency="True" PopupAnimation="Slide">
              <Grid>
                <ListBox x:Name="PART_ListBox" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="380"
                         SnapsToDevicePixels="True"
                         FocusManager.IsFocusScope="True"
                         ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}}"
                         ItemContainerStyle="{Binding ItemContainerStyle, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}}"
                         SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}, Mode=TwoWay}"
                         SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}, Mode=TwoWay}"
                         SelectedValue="{Binding SelectedValue, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}, Mode=TwoWay}"
                         SelectedValuePath="{Binding SelectedValuePath, RelativeSource={RelativeSource AncestorType=ctrl:FilteringComboBox}, Mode=OneWay}"
                         ItemTemplate="{TemplateBinding ItemTemplate}"
                         ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                         ItemStringFormat="{TemplateBinding ItemStringFormat}"
                         Visibility="{Binding Items.Count, RelativeSource={RelativeSource Self}, Converter={cvt:VisibleOrCollapsed}}" />
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TODO: if possible, merge style and template with FilteringComboBox -->
  <Style TargetType="{x:Type ctrl:SearchComboBox}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:SearchComboBox}">
          <Grid>
            <ctrl:TextBox x:Name="PART_EditableTextBox" VerticalAlignment="Center" Focusable="True"
                          WatermarkContent="{TemplateBinding WatermarkContent}"
                          ValidateOnLostFocus="False" ValidateWithEnter="False" UseTimedValidation="True"
                          Text="{Binding SearchText, RelativeSource={RelativeSource AncestorType=ctrl:SearchComboBox}, Mode=OneWayToSource}"
                          IsEnabled="{TemplateBinding IsEnabled}" CancelWithEscape="False" />
            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False"
                   AllowsTransparency="True" PopupAnimation="Slide">
              <Grid>
                <ListBox x:Name="PART_ListBox" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="380"
                         SnapsToDevicePixels="True"
                         FocusManager.IsFocusScope="True"
                         ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType=ctrl:SearchComboBox}}"
                         SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=ctrl:SearchComboBox}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                         SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ctrl:SearchComboBox}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                         SelectedValue="{Binding SelectedValue, RelativeSource={RelativeSource AncestorType=ctrl:SearchComboBox}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                         SelectedValuePath="{Binding SelectedValuePath, RelativeSource={RelativeSource AncestorType=ctrl:SearchComboBox}, Mode=OneWay}"
                         ItemTemplate="{TemplateBinding ItemTemplate}"
                         ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                         ItemStringFormat="{TemplateBinding ItemStringFormat}"
                         Visibility="{Binding Items.Count, RelativeSource={RelativeSource Self}, Converter={cvt:VisibleOrCollapsed}}" />
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DefaultLogViewerStyle" TargetType="ctrl:TextLogViewer">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ctrl:TextLogViewer">
          <DockPanel>
            <ToolBarTray DockPanel.Dock="Top"
                         Visibility="{Binding IsToolBarVisible, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
              <ToolBar
                Visibility="{Binding CanClearLog, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                <Button x:Name="PART_ClearLog" Content="Clear" />
              </ToolBar>
              <ToolBar Header="Filters"
                       Visibility="{Binding CanFilterLog, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                <ToggleButton Padding="4,0" Content="Debug"
                              IsChecked="{Binding ShowDebugMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <ToggleButton Padding="4,0" Content="Verbose"
                              IsChecked="{Binding ShowVerboseMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <ToggleButton Padding="4,0" Content="Infomation"
                              IsChecked="{Binding ShowInfoMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <ToggleButton Padding="4,0" Content="Warnings"
                              IsChecked="{Binding ShowWarningMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <ToggleButton Padding="4,0" Content="Errors"
                              IsChecked="{Binding ShowErrorMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <ToggleButton Padding="4,0" Content="Fatal errors"
                              IsChecked="{Binding ShowFatalMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <ToggleButton Padding="4,0" Content="Show Stacktrace"
                              IsChecked="{Binding ShowStacktrace, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Separator />
              </ToolBar>
              <ToolBar Header="Search"
                       Visibility="{Binding CanSearchLog, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                <ctrl:TextBox UseTimedValidation="True" x:Name="PART_SearchTextBox" Width="150"
                              Text="{Binding SearchToken, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              WatermarkContent="Search" />
                <Button Padding="4,0" x:Name="PART_PreviousResult" Content="&lt;" />
                <Button Padding="4,0" x:Name="PART_NextResult" Content="&gt;" />
                <ToggleButton Padding="4,0"
                              IsChecked="{Binding SearchMatchCase, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Content="Match case" />
                <ToggleButton Padding="4,0"
                              IsChecked="{Binding SearchMatchWord, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Content="Match whole word" />
              </ToolBar>
            </ToolBarTray>
            <RichTextBox x:Name="PART_LogTextBox" IsReadOnly="True" HorizontalScrollBarVisibility="Auto"
                         VerticalScrollBarVisibility="Auto" FontFamily="Consolas, Courrier New" FontSize="11" />
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ctrl:TextLogViewer" BasedOn="{StaticResource DefaultLogViewerStyle}" />

  <Style TargetType="{x:Type ctrl:CanvasView}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:CanvasView}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="PART_Grid" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ctrl:TrackerControl}">
    <Setter Property="LineThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:TrackerControl}">
          <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False">
            <Line x:Name="PART_HorizontalLine" Visibility="{TemplateBinding HorizontalLineVisibility}"
                  Stroke="{TemplateBinding LineStroke}" StrokeThickness="{TemplateBinding LineThickness}"
                  RenderOptions.EdgeMode="Aliased" />
            <Line x:Name="PART_VerticalLine" Visibility="{TemplateBinding VerticalLineVisibility}"
                  Stroke="{TemplateBinding LineStroke}" StrokeThickness="{TemplateBinding LineThickness}"
                  RenderOptions.EdgeMode="Aliased" />
            <!--<ContentPresenter />-->
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type Rectangle}"
         x:Key="{x:Static behaviors:SelectionRectangleBehavior.DefaultRectangleStyleKey}">
    <Setter Property="Fill" Value="LightBlue" />
    <Setter Property="Opacity" Value="0.5" />
    <Setter Property="Stroke" Value="Blue" />
    <Setter Property="StrokeLineJoin" Value="Round" />
    <Setter Property="StrokeThickness" Value="1" />
  </Style>

</ResourceDictionary>
