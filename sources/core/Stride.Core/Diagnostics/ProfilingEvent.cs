// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org/ & https://stride3d.net) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.

using System;
using System.Diagnostics;

namespace Stride.Core.Diagnostics
{
    /// <summary>
    /// A profiling event generated by <see cref="Profiler"/>.
    /// </summary>
    public struct ProfilingEvent
    {
        /// <summary>
        /// The unique identifier.
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// The profile key.
        /// </summary>
        public readonly ProfilingKey Key;

        /// <summary>
        /// The type of the profile.
        /// </summary>
        public readonly ProfilingMessageType Type;

        /// <summary>
        /// The timestamp.
        /// </summary>
        public readonly TimeSpan TimeStamp;

        /// <summary>
        /// The elapsed time since Begin event.
        /// </summary>
        public readonly TimeSpan ElapsedTime;

        /// <summary>
        /// The thread id.
        /// </summary>
        public readonly int ThreadId;

        /// <summary>
        /// The message.
        /// </summary>
        public readonly ProfilingEventMessage? Message;

        /// <summary>
        /// The attributes
        /// </summary>
        public readonly TagList Attributes;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProfilingEvent" /> struct.
        /// </summary>
        /// <param name="profileId">The profile identifier.</param>
        /// <param name="profilingKey">The profiling key.</param>
        /// <param name="profilingType">Type of the profiling.</param>
        /// <param name="timeStamp"></param>
        /// <param name="elapsedTime">The elapsed time.</param>
        /// <param name="Message">The message.</param>
        /// <param name="attributes">The attributes.</param>
        public ProfilingEvent(
            int profileId, 
            ProfilingKey profilingKey, 
            ProfilingMessageType profilingType, 
            TimeSpan timeStamp, 
            TimeSpan elapsedTime, 
            int threadId,
            ProfilingEventMessage? message,
            TagList attributes)
        {
            Id = profileId;
            Key = profilingKey;
            Type = profilingType;
            TimeStamp = timeStamp;
            ElapsedTime = elapsedTime;
            ThreadId = threadId;
            Message = message;
            Attributes = attributes;
        }

        public bool IsGPUEvent() => ThreadId == Profiler.GpuThreadId;
    }
}
