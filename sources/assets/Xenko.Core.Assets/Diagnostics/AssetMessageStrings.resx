<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssetCannotDelete" xml:space="preserve">
    <value>无法从路径[{0}]删除资源</value>
    <comment>Cannot delete asset from path [{0}]</comment>
  </data>
  <data name="AssetCannotSave" xml:space="preserve">
    <value>资源无法保存到路径[{0}]</value>
    <comment>The asset cannot be saved to path [{0}]</comment>
  </data>
  <data name="AssetLoadingFailed" xml:space="preserve">
    <value>无法从路径[{0}]加载资源。 原因：{1}</value>
    <comment>Failed to load asset from path [{0}]. Reason: {1}</comment>
  </data>
  <data name="AssetForPackageNotFound" xml:space="preserve">
    <value>找不到资源[{0}]。 软件包[{1}]必需</value>
    <comment>Asset [{0}] not found. Required for package [{1}]</comment>
  </data>
  <data name="AssetFoundInDifferentPackage" xml:space="preserve">
    <value>在包[{1}]中找到资源[{0}]。 也许缺少软件包依赖项？</value>
    <comment>Asset [{0}] was found in package [{1}]. Perhaps a package dependency is missing?</comment>
  </data>
  <data name="AssetReferenceChanged" xml:space="preserve">
    <value>资源引用[{0}] id已更改为新资源[{1}]</value>
    <comment>The asset reference [{0}] id has changed to a new asset [{1}]</comment>
  </data>
  <data name="AssetUpToDate" xml:space="preserve">
    <value>资源[{0}]已经是最新的</value>
    <comment>Asset [{0}] already up-to-date</comment>
  </data>
  <data name="BaseChanged" xml:space="preserve">
    <value>找不到原始资源。 找到具有相同位置的新资源[{0}]</value>
    <comment>Original asset not found. A new asset with the same location was found [{0}]</comment>
  </data>
  <data name="BaseInvalidType" xml:space="preserve">
    <value>无效的基本类型。 基本类型[{0}]与流动资源[{1}]的类型不同</value>
    <comment>Invalid base type. Base type [{0}] is not of the same type as current asset [{1}]</comment>
  </data>
  <data name="BaseNotFound" xml:space="preserve">
    <value>找不到资源</value>
    <comment>The base of the asset was not found</comment>
  </data>
  <data name="BuildProfileCannotBeNull" xml:space="preserve">
    <value>构建配置文件[{0}]不能为null</value>
    <comment>The build profile [{0}] cannot be null</comment>
  </data>
  <data name="BuildProfileFileExtensionCannotBeNull" xml:space="preserve">
    <value>构建配置文件[{0}]的文件扩展名不能为null</value>
    <comment>The file extension for build profile [{0}] cannot be null</comment>
  </data>
  <data name="CompilationCancelled" xml:space="preserve">
    <value>资源[{0}]的编译已取消</value>
    <comment>Compilation of asset [{0}] cancelled</comment>
  </data>
  <data name="CompilationError" xml:space="preserve">
    <value>编译资源[{0}]时出错：{1}</value>
    <comment>Error while compiling asset [{0}]: {1}</comment>
  </data>
  <data name="CompilationFailed" xml:space="preserve">
    <value>资源[{0}]编译失败</value>
    <comment>Asset [{0}] failed to compile</comment>
  </data>
  <data name="CompilationFatal" xml:space="preserve">
    <value>编译资源[{0}]时发生致命错误：{1}</value>
    <comment>Fatal error while compiling asset [{0}]: {1}</comment>
  </data>
  <data name="CompilationSucceeded" xml:space="preserve">
    <value>资源[{0}]已成功编译</value>
    <comment>Asset [{0}] successfully compiled</comment>
  </data>
  <data name="CompilationWarning" xml:space="preserve">
    <value>编译资源[{0}]时发出警告：{1}</value>
    <comment>Warning while compiling asset [{0}]: {1}</comment>
  </data>
  <data name="InternalCompilerError" xml:space="preserve">
    <value>编译[{0}]时发生意外的内部错误</value>
    <comment>Unexpected internal error while compiling [{0}]</comment>
  </data>
  <data name="InvalidCircularReferences" xml:space="preserve">
    <value>资源中的无效循环引用</value>
    <comment>Invalid circular references in the asset</comment>
  </data>
  <data name="PrerequisiteFailed" xml:space="preserve">
    <value>资源[{0}]未编译，先决条件失败</value>
    <comment>Asset [{0}] not compiled, prerequisites failed</comment>
  </data>
  <data name="PackageCannotSave" xml:space="preserve">
    <value>包无法保存到路径[{0}]</value>
    <comment>The package cannot be saved to path [{0}]</comment>
  </data>
  <data name="PackageFilePathNotSet" xml:space="preserve">
    <value>包文件路径未设置</value>
    <comment>Package filepath is not set</comment>
  </data>
  <data name="PackageLocationChanged" xml:space="preserve">
    <value>参考包已移至新位置[{0}]。 参考已更新。</value>
    <comment>The reference package has been moved to a new location [{0}]. Reference has been updated.</comment>
  </data>
  <data name="PackageNotFound" xml:space="preserve">
    <value>找不到软件包[{0}]</value>
    <comment>Package [{0}] not found</comment>
  </data>
  <data name="RawAssetNotFound" xml:space="preserve">
    <value>在磁盘上找不到原始资源[{0}]</value>
    <comment>The raw asset [{0}] was not found on disk</comment>
  </data>
  <data name="PackageDependencyModified" xml:space="preserve">
    <value>程序包依赖项[{0}]修改为[{1}]</value>
    <comment>The package dependency [{0}] is modified to [{1}]</comment>
  </data>
  <data name="CompilationMessage" xml:space="preserve">
    <value>{1}</value>
  </data>
  <data name="DefaultSceneNotFound" xml:space="preserve">
    <value>在包中找不到默认场景</value>
    <comment>A default scene was not found in the package</comment>
  </data>
  <data name="InvalidBasePartInstance" xml:space="preserve">
    <value>引用同一基本实例({1})的实体[{0}]的无效状态。 我们将应用可能导致此实体和引用链接更改的修复程序。</value>
    <comment>Invalid state for the Entity [{0}] referencing the same base instance ({1}). We will apply a fix that can cause a change to this entity and the referencer links.</comment>
  </data>
</root>
