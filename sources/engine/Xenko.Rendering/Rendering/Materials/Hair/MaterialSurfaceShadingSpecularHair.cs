// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Xenko Shader Mixin Code Generator.
// To generate it yourself, please install Xenko.VisualStudio.Package .vsix
// and re-save the associated .xkfx.
// </auto-generated>

using System;
using Xenko.Core;
using Xenko.Rendering;
using Xenko.Graphics;
using Xenko.Shaders;
using Xenko.Core.Mathematics;
using Buffer = Xenko.Graphics.Buffer;

namespace Xenko.Rendering.Materials
{
    public static partial class MaterialSurfaceShadingSpecularHairKeys
    {
        public static readonly ValueParameterKey<Color3> HairSpecularColor1 = ParameterKeys.NewValue<Color3>();
        public static readonly ValueParameterKey<Color3> HairSpecularColor2 = ParameterKeys.NewValue<Color3>();
        public static readonly ValueParameterKey<float> HairScalesAngle = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairSpecularShiftRatio = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairSpecularExponent1 = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairSpecularExponent2 = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairSpecularScale1 = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairSpecularScale2 = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairShiftNoiseScale = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> HairGlintsNoiseStrength = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<SurfaceData> surfaceData = ParameterKeys.NewValue<SurfaceData>();
    }
}
