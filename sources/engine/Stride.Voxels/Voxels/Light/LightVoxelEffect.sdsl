// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org/ & https://stride3d.net) and Sean Boettger <sean@whypenguins.com>
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
using Stride.Rendering.Data;
using Stride.Rendering.Lights;

namespace Stride.Rendering.Voxels.VoxelGI
{
    /// <summary>
    /// Base effect
    /// </summary>
    effect LightVoxelEffect
    {
        using params LightVoxelShaderKeys;
        using params MarchAttributesKeys;

        mixin LightVoxelShader;

        if (LightVoxelShaderKeys.diffuseMarcher != null)
        {
            mixin compose diffuseMarcher = LightVoxelShaderKeys.diffuseMarcher;
        }
        if (LightVoxelShaderKeys.specularMarcher != null)
        {
            mixin compose specularMarcher = LightVoxelShaderKeys.specularMarcher;
        }
        if (MarchAttributesKeys.AttributeSamplers!=null)
        {
            foreach (var attr in MarchAttributesKeys.AttributeSamplers)
            {
                mixin compose AttributeSamplers += (attr);
            }
        }
   };
}
