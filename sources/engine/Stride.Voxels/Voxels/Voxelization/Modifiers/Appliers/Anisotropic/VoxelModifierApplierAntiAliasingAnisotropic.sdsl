// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org/ & https://stride3d.net) and Sean Boettger <sean@whypenguins.com>
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
shader VoxelModifierApplierAntiAliasingAnisotropic<int DirectionalOpacityAttributeID> : VoxelModifierApplierAnisotropic, LocalSamples
{
    override void Apply(inout float4 XP, inout float4 XN, inout float4 YP, inout float4 YN, inout float4 ZP, inout float4 ZN)
    {
        float3 PlaneCoverage = streams.LocalSample[DirectionalOpacityAttributeID].xyz;
        XP *= PlaneCoverage.x;
        XN *= PlaneCoverage.x;
        YP *= PlaneCoverage.y;
        YN *= PlaneCoverage.y;
        ZP *= PlaneCoverage.z;
        ZN *= PlaneCoverage.z;
    }
};
