// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org/ & https://stride3d.net) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
namespace Stride.Rendering.Materials
{
    /// <summary>
    /// Interface for a microfacet Fresnel function
    /// </summary>
    shader MaterialSpecularMicrofacetEnvironmentGGXLUT : IMaterialSpecularMicrofacetEnvironmentFunction, Texturing
    {
        rgroup PerMaterial
        {
            stage Texture2D EnvironmentLightingDFG_LUT;
        }

        override float3 Compute(float3 specularColor, float alphaR, float nDotV)
        {
            float glossiness = 1.0f - sqrt(alphaR);

            float4 environmentLightingDFG = EnvironmentLightingDFG_LUT.SampleLevel(LinearSampler, float2(glossiness, nDotV), 0);
            return specularColor * environmentLightingDFG.r + environmentLightingDFG.g;
        }
    };
}
