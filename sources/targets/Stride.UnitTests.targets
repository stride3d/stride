<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="StrideGraphicsApis">
  <!--Import Unit Tests Local Settings for the solution being loaded -->
  <Import Project="$(SolutionDir)$(SolutionName).UnitTests.Build.targets" Condition="Exists('$(SolutionDir)$(SolutionName).UnitTests.Build.targets')" />

  <!-- Setup GraphicsApi (we do it even if StrideGraphicsApiDependent is not set to true, so that ProjectReference works) -->
  <PropertyGroup>
    <IsTestProject>true</IsTestProject>
    <!-- Check if we have override -->
    <StrideGraphicsApis Condition="'$(StrideGraphicsApisTest)' != ''">$(StrideGraphicsApisTest)</StrideGraphicsApis>
    
    <!-- Build list of Graphics API for platform that supports multiple -->
    <StrideGraphicsApis Condition="'$(StridePlatform)' == 'Windows' And '$(StrideGraphicsApiDependentBuildAll)' == 'true'">Direct3D11;Direct3D12;OpenGL;OpenGLES;Vulkan</StrideGraphicsApis>
    <StrideGraphicsApis Condition="'$(StridePlatform)' == 'Windows' And '$(StrideGraphicsApis)' == ''">Direct3D11</StrideGraphicsApis>
  
    <!-- Setup default GraphicsApi-->
    <StrideGraphicsApi Condition="'$(StrideGraphicsApi)' == '' And '$(StrideGraphicsApis)' != ''">$(StrideGraphicsApis.Split(';', StringSplitOptions.RemoveEmptyEntries)[0])</StrideGraphicsApi>
  </PropertyGroup>

  <ItemGroup Condition="'$(StrideCompileAssets)' == 'true' And '$(StrideCompilerTargetsEnable)' != 'false'">
    <ProjectReference Include="$(MSBuildThisFileDirectory)..\assets\Stride.Core.Assets.CompilerApp\Stride.Core.Assets.CompilerApp.csproj">
      <Private>false</Private>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <GlobalPropertiesToRemove>TargetFramework</GlobalPropertiesToRemove>
      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
    </ProjectReference>
  </ItemGroup>

  <Import Project="$(MSBuildThisFileDirectory)Stride.PackageVersion.targets"/>

  <PropertyGroup>
  <!-- Do not compile unit test when packaging -->
    <StrideCompilerTargetsEnable Condition="'$(StrideSkipUnitTests)' == 'true'">false</StrideCompilerTargetsEnable>
    <StrideCompilerTargetsEnable Condition="'$(StridePackageBuild)' == 'true'">false</StrideCompilerTargetsEnable>

    <StrideCommonDependenciesDir></StrideCommonDependenciesDir>

    <!-- Unit tests are executables (execute asset compiler, embed native libraries, etc... -->
    <StrideIsExecutable>true</StrideIsExecutable>

    <!-- Setup Asset Compiler MSBuild SolutionDir and SolutionName to point to Stride Windows
         Also disable BuildProjectReferences, otherwise it would try to recompile assemblies currently locked by the CompilerApp itself.
         However, that means that Tests dependencies must be compiled properly on Windows (should be the case usually).
    -->
    <StrideCompileAssetOptions>--compile-property:BuildProjectReferences=false</StrideCompileAssetOptions>
  </PropertyGroup>

  <PropertyGroup Condition="'$(StrideGraphicsApiDependent)' != 'true'">
    <OutputPath>$(MSBuildThisFileDirectory)..\..\bin\Tests\$(AssemblyName)\$(StridePlatform)\</OutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(StridePlatform)\$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(StrideGraphicsApiDependent)' == 'true'">
    <OutputPath>$(MSBuildThisFileDirectory)..\..\bin\Tests\$(AssemblyName)\$(StridePlatform)\$(StrideGraphicsApi)\</OutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(StridePlatform)-$(StrideGraphicsApi)\$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(StridePlatform)' == 'Windows'">
    <StartupObject>xunit.runner.stride.Program</StartupObject>
  </PropertyGroup>
  <ItemGroup Condition="'$(StridePlatform)' == 'Windows'">
    <Compile Condition="'$(StrideGraphicsApiDependent)' != 'true'" Include="$(MSBuildThisFileDirectory)..\shared\tests\xunit\LauncherSimple.Windows.cs">
      <Link>LauncherSimple.Windows.cs</Link>
    </Compile>
    <Compile Condition="'$(StrideGraphicsApiDependent)' == 'true'" Include="$(MSBuildThisFileDirectory)..\shared\tests\xunit\LauncherSimple.Windows.cs">
      <Link>LauncherGame.Windows.cs</Link>
    </Compile>
  </ItemGroup>

  <!-- Used by Stride.build to detect if unit tests prefer to run in 32 or 64 bits -->
  <Target Name="_StrideAfterGetTargetPathWithTargetPlatformMoniker" AfterTargets="GetTargetPathWithTargetPlatformMoniker">
    <ItemGroup>
      <TargetPathWithTargetPlatformMoniker Update="$(TargetPath)">
        <PlatformTarget>$(PlatformTarget)</PlatformTarget>
      </TargetPathWithTargetPlatformMoniker>
    </ItemGroup>
  </Target>

  <!-- Make sure sdsl/sdfx are properly setup with code generator; also mark generated code file as dependent -->
  <ItemGroup>
    <Compile Update="**\*.sdsl.cs" DependentUpon="%(Filename)" />
    <None Update="**\*.sdsl" Generator="StrideShaderKeyGenerator" />
    <Compile Update="**\*.sdfx.cs" DependentUpon="%(Filename)" />
    <None Update="**\*.sdfx" Generator="StrideEffectCodeGenerator" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="TeamCity.VSTest.TestAdapter" Version="1.0.23" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.8.3" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
  <Import Condition="'$(IsCrossTargetingBuild)' == 'true'" Project="$(MSBuildThisFileDirectory)Stride.UnitTests.CrossTargeting.targets"/>

  <!-- Add Default targets used by Msbuild for undefined Platforms / or when skipping compilation under a platform -->
  <Import Condition="'$(StrideCompilerTargetsEnable)' == 'false'" Project="$(MSBuildThisFileDirectory)Stride.UnitTests.DisableBuild.targets"/>

  <!-- This needs to be after Sdk.targets -->
  <Import Project="$(MSBuildThisFileDirectory)..\core\Stride.Core\build\Stride.Core.targets"/>
  <Import Project="$(MSBuildThisFileDirectory)Stride.GraphicsApi.PackageReference.targets"/>
  <Import Project="$(MSBuildThisFileDirectory)Stride.GraphicsApi.Dev.targets"/>
  <Import Condition="'$(StrideCompileAssets)' == 'true' And '$(StrideCompilerTargetsEnable)' != 'false'" Project="$(MSBuildThisFileDirectory)..\assets\Stride.Core.Assets.CompilerApp\build\Stride.Core.Assets.CompilerApp.targets"/>

</Project>
