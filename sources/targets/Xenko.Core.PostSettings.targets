<!-- Build file post-included by all Xenko projects -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Add Default targets used by Msbuild for undefined Platforms / or when skipping compilation under a platform -->
  <Target Name="Build"/>
  <Target Name="Clean"/>
  <Target Name="ReBuild"/>
  <Target Name="Publish"/>
  <Target Name="GetTargetPath"/>
  <Target Name="GetNativeManifest"/>
  <Target Name="GetPackagingOutputs"/>

  <!--Import Local Post Settings for the solution being loaded -->
  <Import Project="$(SolutionDir)$(SolutionName).PostSettings.Local.targets" Condition="Exists('$(SolutionDir)$(SolutionName).PostSettings.Local.targets')" />
  <Import Project="$(SolutionDir)Xenko.Core.PostSettings.Local.targets" Condition="Exists('$(SolutionDir)Xenko.Core.PostSettings.Local.targets')" />
  
  <PropertyGroup>
    <XenkoOutputPath Condition=" $(XenkoOutputPath) == '' ">Bin\$(XenkoBuildDirectory)\</XenkoOutputPath>
    <OutputPath>$(XenkoOutputPath)</OutputPath>
    <OutDir>$(OutputPath)</OutDir>
  </PropertyGroup>

  <!-- Include platform dependent assembly when specified -->
  <Choose>
    <When Condition="'$(XenkoPlatformDependent)' == 'true'">
      <Choose>
        <When Condition=" '$(XenkoPlatform)' == 'Android'">
          <ItemGroup>
            <Reference Include="Mono.Android" />
          </ItemGroup>
        </When>
        <When Condition=" '$(XenkoPlatform)' == 'iOS'">
          <ItemGroup>
            <Reference Include="Xamarin.iOS" />
          </ItemGroup>
        </When>
      </Choose>
    </When>
  </Choose>

  <!-- Setup VisualStudioVersion -->
  <PropertyGroup Condition=" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '11.0' ">
    <VisualStudioVersion>11.0</VisualStudioVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(XenkoCodeAnalysis)' == 'true'">
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)Xenko.ruleset</CodeAnalysisRuleSet>
    <!--<TreatWarningsAsErrors>true</TreatWarningsAsErrors>-->
  </PropertyGroup>
  <ItemGroup Condition="'$(XenkoCodeAnalysis)' == 'true'">
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.0-beta008" PrivateAssets="All" />
  </ItemGroup>
  <!-- Disable analyzers unless XenkoEnableCodeAnalysis is set (note: PackageReference can't depend on external Condition) -->
  <Target Name="DisableAnalyzersForXenkoBuild"
        BeforeTargets="CoreCompile"
        Condition="'$(XenkoEnableCodeAnalysis)' != 'true'">
    <ItemGroup>
      <Analyzer Remove="@(Analyzer)"/>
    </ItemGroup>
  </Target>
  

  <!-- Setup compiler targets per platform / language -->
  <PropertyGroup>
    <!-- On Android, everything is library (even Exe) -->
    <OutputType Condition=" '$(XenkoPlatform)' == 'Android' ">Library</OutputType>

    <XenkoGenerateDoc Condition="'$(XenkoPublicApi)' == 'true'">true</XenkoGenerateDoc>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoGenerateDoc)' == 'true' ">
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <XenkoCompilerTargetsEnable Condition=" '$(XenkoPlatform)' != 'Windows' and $(XenkoWindowsOnly) == 'true'">false</XenkoCompilerTargetsEnable>

    <!-- Skip unit tests if requested -->
    <XenkoCompilerTargetsEnable Condition="'$(XenkoSkipUnitTests)' == 'true' And $(XenkoOutputFolder.StartsWith('Tests'))">false</XenkoCompilerTargetsEnable>

    <!-- If XenkoCompilerTargetsEnable is set to false, override LanguageTargets to an empty one -->
    <LanguageTargets Condition="'$(XenkoCompilerTargetsEnable)' == 'false'">$(MSBuildThisFileDirectory)Xenko.Core.DisableBuild.targets</LanguageTargets>
  </PropertyGroup>
  
  <!-- C++ doesn't auto-import language targets -->
  <Import Condition="'$(XenkoProjectType)' == 'Cpp' And '$(XenkoCompilerTargetsEnable)' != 'false'" Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />

  <UsingTask TaskName="AssemblyProcessorTask" AssemblyFile="$(XenkoAssemblyProcessorPath)" Condition=" '$(XenkoAssemblyProcessorPath)' != '' And '$(XenkoAssemblyProcessorDev)' != 'true' "/>
  
  <Target Name="RunXenkoAssemblyProcessor" BeforeTargets="CopyFilesToOutputDirectory" Condition=" '$(XenkoAssemblyProcessor)' == 'true' and '$(XenkoAssemblyProcessorPath)' != '' and '$(XenkoAssemblyProcessorGlobal)' == 'true' and '$(XenkoAssemblyProcessorOptions)' != '' ">
    <PropertyGroup Condition="'$(XenkoUserBuild)' != 'true'">
      <!-- Add Xenko.Core path to assembly search directory -->
      <XenkoAssemblyProcessorOptions Condition="'$(XenkoCoreAssemblyPath)' != ''">$(XenkoAssemblyProcessorOptions) --assembly="$(XenkoCoreAssemblyPath)"</XenkoAssemblyProcessorOptions>
    </PropertyGroup>

    <WriteLinesToFile File="$(IntermediateOutputPath)XenkoReferences.cache" Lines="@(ReferencePath)" Overwrite="true" />

    <!--Add platform and target framework to assembly processor options-->
    <PropertyGroup>
      <XenkoAssemblyProcessorOptions>--platform=$(XenkoPlatform) --targetFramework=$(TargetFrameworkVersion) $(XenkoAssemblyProcessorOptions)</XenkoAssemblyProcessorOptions>
      <XenkoAssemblyProcessorOptions>$(XenkoAssemblyProcessorOptions) --references-file="$(IntermediateOutputPath)XenkoReferences.cache"</XenkoAssemblyProcessorOptions>
      <XenkoAssemblyProcessorOptions Condition="'$(AssemblyOriginatorKeyFile)' != ''">$(XenkoAssemblyProcessorOptions) --signkeyfile="$(AssemblyOriginatorKeyFile)"</XenkoAssemblyProcessorOptions>
      <XenkoAssemblyProcessorOptions Condition="'$(DocumentationFile)' != ''">$(XenkoAssemblyProcessorOptions) --docfile="$(DocumentationFile)"</XenkoAssemblyProcessorOptions>
      <XenkoAssemblyProcessorOptions>$(XenkoAssemblyProcessorOptions) --Werror</XenkoAssemblyProcessorOptions>
      <XenkoAssemblyProcessorOptions>$(XenkoAssemblyProcessorOptions) "$(IntermediateOutputPath)$(TargetName)$(TargetExt)"</XenkoAssemblyProcessorOptions>
    </PropertyGroup>

    <!-- Run assembly processor -->
    <Message Importance="High" Text="&quot;$(XenkoAssemblyProcessorPath)&quot; $(XenkoAssemblyProcessorOptions)"/>
    <AssemblyProcessorTask Condition=" '$(XenkoAssemblyProcessorDev)' != 'true' " Arguments="$(XenkoAssemblyProcessorOptions)"/>
    <!-- Dev mode: don't use task to avoid locking the file -->
    <Exec Condition=" '$(XenkoAssemblyProcessorDev)' == 'true' " Command="&quot;$(XenkoAssemblyProcessorPath)&quot; $(XenkoAssemblyProcessorOptions)"/>
  </Target>

  <Target Name="SetPrivateOnProjectReferences" BeforeTargets="BeforeCompile" AfterTargets="IncludeTransitiveProjectReferences">
    <!-- Automatically add Private on project references if they are already built in same folder as output folder -->
	<!-- Also add PrivateAssets All to all Private projects -->
    <ItemGroup Condition="'$(OutputPath)' == '$(XenkoOutputCommonDir)'">
      <ProjectReferenceNew Include="@(ProjectReference)">
        <Private>False</Private>
      </ProjectReferenceNew>
      <ProjectReference Remove="@(ProjectReference)"/>
      <ProjectReference Include="@(ProjectReferenceNew)"/>
    </ItemGroup>
  </Target>

  <Import Project="$(MSBuildThisFileDirectory)Xenko.Core.PostSettings.Dependencies.targets"/>
  
  <Import Condition="'$(XenkoNativeOutputName)' != ''" Project="$(MSBuildThisFileDirectory)..\native\Xenko.Native.targets" />
  
</Project>
