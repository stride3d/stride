<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:ICSharpCode.AvalonEdit.CodeCompletion;assembly=ICSharpCode.AvalonEdit"
                    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:scriptEditor="clr-namespace:Stride.Assets.Presentation.AssetEditors.ScriptEditor"
                    xmlns:editor="clr-namespace:RoslynPad.Editor;assembly=RoslynPad.Editor.Windows"
                    xmlns:codeFixes="clr-namespace:RoslynPad.Roslyn.CodeFixes;assembly=RoslynPad.Roslyn"
                    xmlns:converters="clr-namespace:Stride.Assets.Presentation.AssetEditors.ScriptEditor.Converters"
                    xmlns:codeActions="clr-namespace:Microsoft.CodeAnalysis.CodeActions;assembly=Microsoft.CodeAnalysis.Workspaces"
                    xmlns:codeAnalysis="clr-namespace:Microsoft.CodeAnalysis;assembly=Microsoft.CodeAnalysis"
                    xmlns:sd="http://schemas.stride3d.net/xaml/presentation">
  <!-- Various styles and resources needed for the code editor; some of them are based on templates from AvalonEdit (MIT license) and RoslyPad (Apache license) -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/RoslynPad.Editor.Windows;component/Themes/Generic.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="cc:CompletionWindow" BasedOn="{StaticResource {x:Type cc:CompletionWindow}}">
    <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CornerRadius="0" CaptionHeight="30"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Window">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <AdornerDecorator>
              <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="{ComponentResourceKey {x:Type avalonedit:DropDownButton}, ActiveBorder}" Color="#FF333333"/>
  <SolidColorBrush x:Key="{ComponentResourceKey {x:Type avalonedit:DropDownButton}, ActiveBackground}" Color="#FF9D9D9D"/>

  <Style TargetType="scriptEditor:ScriptTextEditor">
    <Setter Property="FontFamily" Value="Consolas"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="scriptEditor:ScriptTextEditor">
          <scriptEditor:SimpleCodeTextEditor x:Name="PART_CodeEditor" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" ContextActionsIcon="{StaticResource Bulb}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <HierarchicalDataTemplate DataType="{x:Type codeFixes:CodeFixCollection}" ItemsSource="{Binding Fixes, Mode=OneTime}">
    <TextBlock Text="{Binding Provider, Mode=OneTime}" />
  </HierarchicalDataTemplate>

  <HierarchicalDataTemplate DataType="{x:Type codeFixes:CodeFix}" ItemsSource="{Binding Action, Mode=OneTime, Converter={converters:CodeActionsConverter}}">
    <ContentPresenter Content="{Binding Action, Mode=OneTime}" />
  </HierarchicalDataTemplate>

  <DataTemplate DataType="{x:Type codeActions:CodeAction}">
    <DockPanel>
      <Image Source="{Binding Mode=OneTime, Converter={converters:CodeActionToGlyphConverter}}" />
      <TextBlock Text="{Binding Title, Mode=OneTime}" />
    </DockPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type codeAnalysis:Diagnostic}">
    <TextBlock Text="{Binding Descriptor.Title, Mode=OneTime}" />
  </DataTemplate>

  <DataTemplate DataType="{x:Type ImageSource}">
    <Image Source="{Binding Mode=OneTime}" />
  </DataTemplate>

  <Style TargetType="scriptEditor:SimpleCodeTextEditor">
    <Setter Property="CompletionBackground" Value="{DynamicResource ControlBackgroundBrush}"/>
    <Setter Property="FontFamily" Value="Consolas"/>
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Background" Value="{DynamicResource CodeEditorBackgroundBrush}" />
  </Style>

  <Style TargetType="editor:SearchReplacePanel">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="editor:SearchReplacePanel">
          <Border Background="{DynamicResource BackgroundBrush}"
                  BorderBrush="{DynamicResource BlueBrush}"
                  BorderThickness="0 0 0 3"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top"
                  Cursor="Arrow"
                  TextElement.FontFamily="{x:Static SystemFonts.MenuFontFamily}">

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition  Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <ToggleButton Style="{StaticResource ExpanderToggle}"
                            ToolTip="{sd:Localize Toggle between find and replace modes, Context=ToolTip}"
                            IsChecked="{Binding IsReplaceMode, RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.Column="0" Grid.Row="0" Width="16" Margin="2" />

              <sd:TextBox Name="PART_searchTextBox" Grid.Column="1" Grid.Row="0"
                            Width="150" Height="24" Margin="3,3,3,0"
                            Text="{Binding SearchPattern, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />

              <sd:TextBox Name="ReplaceBox" Visibility="Collapsed" Grid.Column="1" Grid.Row="1"
                            Width="150" Height="24" Margin="3 3 3 0"
                            Text="{Binding ReplacePattern, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />

              <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="0">
                <avalonedit:DropDownButton Height="24">
                  <avalonedit:DropDownButton.DropDownContent>
                    <Popup StaysOpen="False">
                      <Border Background="{DynamicResource BackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1">
                        <StackPanel Orientation="Vertical">
                          <CheckBox IsChecked="{Binding MatchCase, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Binding Localization.MatchCaseText, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="3" />
                          <CheckBox IsChecked="{Binding WholeWords, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Binding Localization.MatchWholeWordsText, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="3" />
                          <CheckBox IsChecked="{Binding UseRegex, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Binding Localization.UseRegexText, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="3" />
                        </StackPanel>
                      </Border>
                    </Popup>
                  </avalonedit:DropDownButton.DropDownContent>
                </avalonedit:DropDownButton>
                <Button Margin="3" Height="24" Width="24"
                        Command="avalonedit:SearchCommands.FindPrevious"
                        ToolTip="{Binding Localization.FindPreviousText, RelativeSource={RelativeSource TemplatedParent}}">
                  <Image Width="16" Height="16" Stretch="Fill" Source="{StaticResource FindPrevious}" />
                </Button>
                <Button Margin="3" Height="24" Width="24"
                        Command="avalonedit:SearchCommands.FindNext"
                        ToolTip="{Binding Localization.FindNextText, RelativeSource={RelativeSource TemplatedParent}}">
                  <Image Width="16" Height="16" Stretch="Fill" Source="{StaticResource FindNext}" />
                </Button>
                <Button Height="16" Width="16" HorizontalAlignment="Right" VerticalAlignment="Top"
                        Command="avalonedit:SearchCommands.CloseSearchPanel"
                        VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Focusable="False">
                  <Path Data="M 0,0 L 8,8 M 8,0 L 0,8"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeThickness="1" />
                </Button>
              </StackPanel>

              <StackPanel Name="ReplaceButtons"
                          Visibility="Collapsed"
                          Orientation="Horizontal"
                          Grid.Column="2"
                          Grid.Row="1">
                <Button Margin="3"
                        Height="24"
                        Width="24"
                        Command="editor:SearchCommandsEx.ReplaceNext"
                        ToolTip="{sd:Localize Replace next (Alt+R), Context=ToolTip}">
                  <Image Width="16"
                         Height="16"
                         Stretch="Fill"
                         Source="{StaticResource ReplaceNext}" />
                </Button>
                <Button Margin="3"
                        Height="24"
                        Width="24"
                        Command="editor:SearchCommandsEx.ReplaceAll"
                        ToolTip="{sd:Localize Replace all (Alt+A), Context=ToolTip}">
                  <Image Width="16"
                         Height="16"
                         Stretch="Fill"
                         Source="{StaticResource ReplaceAll}" />
                </Button>
              </StackPanel>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsReplaceMode" Value="True">
              <Setter TargetName="ReplaceBox" Property="Visibility" Value="Visible" />
              <Setter TargetName="ReplaceButtons" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ListBoxItem}" x:Key="CompletionListBoxItem">
    <Setter Property="Background" Value="#FF1E1E1E"/>
    <Setter Property="BorderBrush" Value="#FF1E1E1E"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}"
                  SnapsToDevicePixels="true">
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>
          <!-- Simplified triggers:
             we don't want a gray selection background when the ListBox doesn't have focus
          -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Background"
                      Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type cc:CompletionList}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type cc:CompletionList}">
          <cc:CompletionListBox x:Name="PART_ListBox" ItemContainerStyle="{StaticResource CompletionListBoxItem}" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{x:Null}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <Image Source="{Binding Image}" Width="16" Height="16" Margin="0,0,2,0"/>
                  <ContentPresenter Content="{Binding Content}"/>
                </StackPanel>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </cc:CompletionListBox>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ListBox" Property="HasItems" Value="False">
              <Setter TargetName="PART_ListBox" Property="Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <ListBoxItem Style="{StaticResource CompletionListBoxItem}">
                        <TextBlock Text="{sd:Localize No suggestions}"/>
                      </ListBoxItem>
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
