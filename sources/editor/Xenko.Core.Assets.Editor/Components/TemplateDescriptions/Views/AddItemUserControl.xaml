<UserControl x:Class="Xenko.Core.Assets.Editor.Components.TemplateDescriptions.Views.AddItemUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:Xenko.Core.Assets.Editor.View.Behaviors"
             xmlns:xk="http://schemas.xenko.com/xaml/presentation"
             xmlns:view="clr-namespace:Xenko.Core.Assets.Editor.Components.TemplateDescriptions.Views"
             xmlns:viewModels="clr-namespace:Xenko.Core.Assets.Editor.Components.TemplateDescriptions.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Xenko.Core.Assets.Editor;component/View/CommonResources.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>
  <xk:FilteringComboBox DataContext="{Binding TemplateCollection, RelativeSource={RelativeSource AncestorType=view:AddItemUserControl}}"
                          Text="{Binding SearchToken, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" WatermarkContent="{xk:Localize Search}"
                          ItemsSource="{Binding Templates}" SortMemberPath="Name" x:Name="FilteringComboBox"
                          ClearTextAfterValidation="True" ValidateOnLostFocus="False">
    <xk:FilteringComboBox.Template>
      <ControlTemplate TargetType="{x:Type xk:FilteringComboBox}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <DockPanel Grid.Column="0" Margin="4" x:Name="LeftPanel">
            <DockPanel Margin="4" DockPanel.Dock="Top">
              <Button VerticalAlignment="Center" Margin="8,0,0,0" Style="{StaticResource ImageButtonStyle}"
                      DockPanel.Dock="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                      Visibility="{Binding SelectFilesToCreateItemCommand, RelativeSource={RelativeSource AncestorType=view:AddItemUserControl}, Converter={xk:Chained {xk:ObjectToBool}, {xk:VisibleOrCollapsed}}}"
                      Command="{Binding SelectFilesToCreateItemCommand, RelativeSource={RelativeSource AncestorType=view:AddItemUserControl}}"
                      ToolTip="{xk:Localize Import directly from files, Context=ToolTip}" Width="20" Height="20" Padding="2">
                <Image Source="{StaticResource ImageImportAsset}" Width="16" Height="16"/>
              </Button>
              <xk:TextBox x:Name="PART_EditableTextBox" ValidateOnLostFocus="False" VerticalAlignment="Center" Focusable="True"
                                    WatermarkContent="{Binding WatermarkContent, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}}"
                                    Text="{Binding Text, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox},
                                    UpdateSourceTrigger=PropertyChanged}" ValidateOnTextChange="False" GetFocusOnLoad="True"
                                    IsEnabled="{TemplateBinding IsEnabled}" CancelWithEscape="False"/>
            </DockPanel>
            <ListBox x:Name="GroupList" ItemsSource="{Binding RootGroup.SubGroups, Mode=OneWay}" MinWidth="160" VerticalAlignment="Top"
                     IsEnabled="{Binding SearchToken, Converter={xk:Chained {xk:CountEnumerable}, {xk:NumericToBool}, {xk:InvertBool}}}">
              <ListBox.Style>
                <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
                  <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                      <Setter Property="SelectedItem" Value="{x:Null}"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </ListBox.Style>
              <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                  <Setter Property="Background" Value="Transparent"/>
                  <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                  <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                  <Setter Property="Padding" Value="0"/>
                </Style>
              </ListBox.ItemContainerStyle>
              <ListBox.ItemTemplate>
                <DataTemplate DataType="viewModels:TemplateDescriptionGroupViewModel">
                  <ToggleButton IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                Padding="6,3">
                    <ToggleButton.Template>
                      <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <DockPanel Background="Transparent">
                          <Border DockPanel.Dock="Right" Visibility="Hidden" x:Name="GlyphPanel" VerticalAlignment="Center"
                                  Margin="{TemplateBinding Padding}">
                            <Path VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" FlowDirection="LeftToRight"
                                  Margin="4,2"/>
                          </Border>
                          <ContentPresenter HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" VerticalAlignment="Top" Focusable="False"/>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                          </Trigger>
                          <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </ToggleButton.Template>
                    <TextBlock Text="{Binding Name}" Margin="10,0"/>
                  </ToggleButton>
                </DataTemplate>
              </ListBox.ItemTemplate>
              <i:Interaction.Behaviors>
                <behaviors:ListBoxHighlightedItemBehavior IsEnabled="{Binding Text, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Converter={xk:EmptyStringToBool}}"
                                                          HighlightedItem="{Binding SelectedGroup, Mode=OneWayToSource}"
                                                          SelectHighlightedWhenEnteringControl="{Binding ElementName=PART_ListBox}"
                                                          UseSelectedItemIfAvailable="True" DelayToUpdate="0.2"/>
              </i:Interaction.Behaviors>
            </ListBox>
          </DockPanel>
          <Separator Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="1" Background="{StaticResource NormalBrush}"
                     Visibility="{Binding Items.Count, ElementName=PART_ListBox, Converter={xk:VisibleOrCollapsed}}"/>
          <ListBox x:Name="PART_ListBox" SnapsToDevicePixels="True" Width="{x:Static view:AddItemUserControl.TemplateListWidth}"
                    Margin="4" Grid.Column="2" Height="{Binding ActualHeight, ElementName=LeftPanel}"
                    FocusManager.IsFocusScope="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}}"
                    SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=TwoWay}"
                    SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=TwoWay}"
                    SelectedValue="{Binding SelectedValue, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=TwoWay}"
                    SelectedValuePath="{Binding SelectedValuePath, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=OneWay}"
                    ItemTemplate="{TemplateBinding ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    ItemStringFormat="{TemplateBinding ItemStringFormat}"
                    Visibility="{Binding Items.Count, RelativeSource={RelativeSource Self}, Converter={xk:VisibleOrCollapsed}}">
            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Setter Property="Background" Value="Transparent"/>
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </Grid>
      </ControlTemplate>
    </xk:FilteringComboBox.Template>
    <xk:FilteringComboBox.ItemTemplate>
      <DataTemplate DataType="viewModels:ITemplateDescriptionViewModel">
        <DockPanel Height="56">
          <Image Source="{Binding Icon}" DockPanel.Dock="Left" Width="48" Height="48" Margin="2"/>
          <DockPanel Margin="18,0">
            <TextBlock DockPanel.Dock="Top" FontSize="16" Text="{Binding Name}"/>
            <TextBlock Text="{Binding Description}" TextWrapping="Wrap" TextTrimming="WordEllipsis"/>
          </DockPanel>
        </DockPanel>
      </DataTemplate>
    </xk:FilteringComboBox.ItemTemplate>
    <i:Interaction.Behaviors>
      <xk:OnEventCommandBehavior EventName="Validated" Command="{Binding AddItemCommand, RelativeSource={RelativeSource AncestorType=view:AddItemUserControl}}" CommandParameter="{Binding ValidatedItem, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}}"/>
    </i:Interaction.Behaviors>
  </xk:FilteringComboBox>
</UserControl>
