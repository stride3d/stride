<xk:ModalWindow x:Class="Xenko.Core.Assets.Editor.View.SettingsWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:xk="http://schemas.xenko.com/xaml/presentation"
                  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                  xmlns:behaviors="clr-namespace:Xenko.Core.Assets.Editor.View.Behaviors"
                  xmlns:valueConverters="clr-namespace:Xenko.Core.Assets.Editor.View.ValueConverters"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:edvw="clr-namespace:Xenko.Core.Assets.Editor.View"
                  xmlns:viewModels="clr-namespace:Xenko.Core.Assets.Editor.Settings.ViewModels"
                  xmlns:viewModels1="clr-namespace:Xenko.Core.Presentation.Quantum.ViewModels;assembly=Xenko.Core.Presentation.Quantum"
                  mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:SettingsViewModel}"
                  ShowInTaskbar="False"
                  Title="{xk:Localize Settings}" Height="768" Width="1024" Style="{DynamicResource WindowChromeStyle}"
        >
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CommonResources.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>
  <DockPanel>
    <UniformGrid Rows="1" DockPanel.Dock="Bottom" Margin="20" HorizontalAlignment="Right">
      <Button Margin="10,0,0,0" Padding="20,4" Content="{xk:Localize Save and close, Context=Button}">
        <i:Interaction.Behaviors>
          <xk:ButtonCloseWindowBehavior Command="{Binding ValidateChangesCommand}"/>
        </i:Interaction.Behaviors>
      </Button>
      <Button Margin="10,0,0,0" Padding="20,4" Content="{xk:Localize Cancel, Context=Button}" IsCancel="True">
        <i:Interaction.Behaviors>
          <xk:ButtonCloseWindowBehavior Command="{Binding DiscardChangesCommand}"/>
        </i:Interaction.Behaviors>
      </Button>
    </UniformGrid>

    <Grid Margin="20">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="2*"/>
      </Grid.ColumnDefinitions>

      <xk:TreeView Grid.Column="0" ItemsSource="{Binding Categories}" SelectedItem="{Binding SelectedCategory, Mode=TwoWay}" SelectionMode="Single">
        <xk:TreeView.ItemContainerStyle>
          <Style TargetType="{x:Type xk:TreeViewItem}" BasedOn="{StaticResource {x:Type xk:TreeViewItem}}">
            <Setter Property="IsExpanded" Value="{Binding Mode=OneTime, Converter={valueConverters:SettingsCategoryToExpandedAtInitialization}}"/>
          </Style>
        </xk:TreeView.ItemContainerStyle>
        <xk:TreeView.ItemTemplate>
          <HierarchicalDataTemplate ItemsSource="{Binding SubCategories}">
            <TextBlock Text="{Binding Name}"/>
          </HierarchicalDataTemplate>
        </xk:TreeView.ItemTemplate>
      </xk:TreeView>

      <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext" VerticalAlignment="Stretch" />

      <xk:PropertyView NameColumnSize="310" Grid.Column="2" ItemsSource="{Binding ViewModel.RootNode.Children}" BorderThickness="1" Background="{DynamicResource HoverBrush}" Padding="5">
        <xk:PropertyView.ItemContainerStyle>
          <Style BasedOn="{StaticResource {x:Type xk:PropertyViewItem}}" TargetType="xk:PropertyViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HeaderTemplate">
              <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=OneWay}" DataType="viewModels1:NodeViewModel">
                  <ContentPresenter Content="{Binding}" ContentTemplateSelector="{x:Static edvw:PropertyViewHelper.HeaderProviders}"/>
                </HierarchicalDataTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="xk:PropertyViewItem">
                  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" SnapsToDevicePixels="True"
                                            Visibility="{Binding IsVisible, Converter={xk:VisibleOrCollapsed}}" d:DataContext="{d:DesignInstance viewModels1:NodeViewModel}">
                    <DockPanel>
                      <Border DockPanel.Dock="Top" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      </Border>
                      <Border DockPanel.Dock="Bottom" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplateSelector="{x:Static edvw:PropertyViewHelper.FooterProviders}" Name="PART_Footer" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      </Border>
                      <Expander x:Name="propertyExpander" IsExpanded="{TemplateBinding IsExpanded}" Style="{StaticResource PropertyExpanderStyle}" IsEnabled="True">
                        <ItemsPresenter Name="ItemsHost"/>
                      </Expander>
                    </DockPanel>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </xk:PropertyView.ItemContainerStyle>
        <i:Interaction.Behaviors>
          <behaviors:PropertyViewAutoExpandNodesBehavior ViewModel="{Binding ViewModel, Mode=OneWay}"/>
        </i:Interaction.Behaviors>
      </xk:PropertyView>
    </Grid>
  </DockPanel>
</xk:ModalWindow>
