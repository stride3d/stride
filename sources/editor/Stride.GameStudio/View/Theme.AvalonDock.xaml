<!--***********************************************************************************

   Extended WPF Toolkit

   Copyright (C) 2007-2013 Xceed Software Inc.

   This program is provided to you under the terms of the Microsoft Public
   License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license

   For more features, controls, and fast professional support,
   pick up the Plus Edition at http://xceed.com/wpf_toolkit

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:view="clr-namespace:Stride.GameStudio.View">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Stride.Core.Assets.Editor;component/View/CommonResources.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
  <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
  <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
  <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
  <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
  <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>

  <Style TargetType="{x:Type avalonDockControls:ContextMenuEx}" BasedOn="{StaticResource {x:Type ContextMenu}}"/>

  <Style x:Key="AvalonDock_SubTabItemTextStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding LayoutItem.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type avalonDockControls:LayoutAnchorableTabItem}}, Mode=OneWay}" Value="True">
        <Setter Property="Foreground" Value="{StaticResource SubTabItemActiveForeground}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <!--DocumentPaneControlStyle-->
  <Style x:Key="AvalonDock_ThemeAero_DocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
    <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
          <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Following border is required to catch mouse events-->
            <Border Background="Transparent" Grid.RowSpan="2"/>
            <Grid  Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={StaticResource BoolToVisibilityConverter}}"
                   Panel.ZIndex="1" >
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <view:CustomDocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="4,0,16,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
              <avalonDockControls:DropDownButton
                         x:Name="MenuDropDownButton"
                         Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                         Focusable="False"
                         VerticalAlignment="Center"
                         Grid.Column="1">
                <avalonDockControls:DropDownButton.DropDownContextMenu>
                  <avalonDockControls:ContextMenuEx
                               ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                    <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                      <Style TargetType="{x:Type avalonDockControls:MenuItemEx}"  BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                        <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                        <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                        <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                        <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                      </Style>
                    </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                  </avalonDockControls:ContextMenuEx>
                </avalonDockControls:DropDownButton.DropDownContextMenu>
                <Image>
                  <Image.Source>
                    <DrawingImage>
                      <DrawingImage.Drawing>
                        <DrawingGroup>
                          <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16 16h-16v-16h16v16z" />
                          <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M12 5v3.414l-4 4-4-4v-3.414h8z" />
                          <GeometryDrawing Brush="#FF424242" Geometry="F1M11 7h-6v-1h6v1zm0 1h-6l3 3 3-3z" />
                        </DrawingGroup>
                      </DrawingImage.Drawing>
                    </DrawingImage>
                  </Image.Source>
                </Image>
              </avalonDockControls:DropDownButton>
            </Grid>
            <Border x:Name="ContentPanel"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Grid.Column="0"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          Grid.Row="1"
                          KeyboardNavigation.TabIndex="2"
                          KeyboardNavigation.TabNavigation="Cycle">
              <Border
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          >
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                        ContentSource="SelectedContent"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
              <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type TabItem}">
          <Setter Property="Focusable" Value="False"/>
          <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
          <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
          <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
          <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
          <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
          <Setter Property="Padding" Value="2,1,2,1"/>
          <Setter Property="FontSize" Value="13" />
          <Setter Property="Margin" Value="1,0,0,0"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TabItem}">
                <Grid SnapsToDevicePixels="true">

                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>

                  <Rectangle
                               x:Name="splineBd"
                               Fill="{TemplateBinding Background}"/>

                  <Border x:Name="Bd"
                                   Grid.Column="1"
                     BorderBrush="{TemplateBinding BorderBrush}">
                    <Border
                                  x:Name="BdInternal"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                                            >
                      <ContentPresenter
                     x:Name="Content"
                     ContentSource="Header"
                                     HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                     VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                     RecognizesAccessKey="True"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                  </Border>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="Selector.IsSelected" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                    <Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                    <Setter Property="Panel.ZIndex" Value="1" />
                    <!--<Setter Property="Margin" Value="-1,0,-16,-1"/>
                    <Setter Property="Margin" TargetName="BdInternal" Value="0,0,0,-1"/>
                    <Setter Property="Margin" TargetName="splineBd" Value="0,0,0,-1.0"/>-->
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="Panel.ZIndex" Value="1" />
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsMouseOver" Value="true"/>
                      <Condition Property="Selector.IsSelected" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                    <Setter Property="Panel.ZIndex" Value="0" />
                  </MultiTrigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                    <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <avalonDockControls:LayoutDocumentTabItem Model="{Binding}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <avalonDockControls:LayoutDocumentControl Model="{Binding}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--AnchorablePaneControlStyle-->
  <Style x:Key="AvalonDock_ThemeAero_AnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
    <Setter Property="TabStripPlacement" Value="Bottom"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
          <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!--Following border is required to catch mouse events-->
            <Border Background="Transparent" Grid.RowSpan="2"/>
            <Border x:Name="ContentPanel"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          KeyboardNavigation.TabIndex="2"
                          KeyboardNavigation.TabNavigation="Cycle">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                                       ContentSource="SelectedContent"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <avalonDockControls:AnchorablePaneTabPanel
                      x:Name="HeaderPanel"
                      Margin="0,0,2,2"
                      IsItemsHost="true"
                      Grid.Row="1"
                      KeyboardNavigation.TabIndex="1"
                      Panel.ZIndex="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
              <Setter Property="Margin" Value="0" TargetName="HeaderPanel"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type TabItem}">
          <Setter Property="Focusable" Value="False"/>
          <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
          <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
          <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
          <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
          <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
          <Setter Property="Margin" Value="0,0,-1,0"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TabItem}">
                <Grid SnapsToDevicePixels="true">
                  <Border x:Name="Bd"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Background="{TemplateBinding Background}"
                          Padding="{TemplateBinding Padding}">
                    <ContentPresenter
                                  x:Name="Content"
                                  ContentSource="Header"
                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                  </Border>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="Selector.IsSelected" Value="true">
                    <Setter Property="Background" Value="{StaticResource SubTabItemActiveBackground}" />
                    <Setter Property="Panel.ZIndex" Value="1" />
                    <Setter Property="TextBlock.Foreground" TargetName="Content" Value="{StaticResource SubTabItemActiveForeground}" />
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsMouseOver" Value="true"/>
                      <Condition Property="Selector.IsSelected" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                    <Setter Property="Panel.ZIndex" Value="0" />
                  </MultiTrigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                    <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
              <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>

    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <avalonDockControls:LayoutAnchorableControl Model="{Binding}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="avalonDockControls:AnchorablePaneTitle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Background="{TemplateBinding Background}"
                       BorderBrush="{StaticResource SolidBorderBrush}"
                       BorderThickness="0"
                       Padding="0,2,0,1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <avalonDockControls:DropDownControlArea
                         DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                         DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter
                            x:Name="Header"
                            Margin="2,0,0,0"
                            Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
              </avalonDockControls:DropDownControlArea>

              <avalonDockControls:DropDownButton
                         x:Name="MenuDropDownButton"
                         VerticalAlignment="Center"
                         Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                         Focusable="False"
                         Grid.Column="1"
                         Padding="-1"
                         DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                         DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                         ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                >
                <Image x:Name="PART_ImgMenuPin" Source="{DynamicResource VectorGlyphDown}"/>
              </avalonDockControls:DropDownButton>

              <Button x:Name="PART_AutoHidePin"
                         Grid.Column="2"
                         Focusable="False"
                         Padding="-1"
                         Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                         Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                         ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                >
                <Image x:Name="PART_ImgAutoHidePin" Source="{DynamicResource VectorPin}"/>
              </Button>
              <Button x:Name="PART_HidePin"
                         Grid.Column="3"
                         Focusable="False"
                         Padding="-1"
                         Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                         Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                         ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}">
                <Image x:Name="PART_ImgHidePin" Width="10" Source="{DynamicResource VectorCloseWindow}"/>
              </Button>

            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
              <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                <Setter.Value>
                  <RotateTransform Angle="90"/>
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
              <Setter Property="Background" Value="{StaticResource NormalBrush}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="AvalonDock_ThemeAero_AnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
    <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel
                   MinWidth="4"
                   MinHeight="4"
                   Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
  </ControlTemplate>

  <ControlTemplate x:Key="AvalonDock_ThemeAero_AnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
    <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
      <ItemsControl.LayoutTransform>
        <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}"/>
      </ItemsControl.LayoutTransform>
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
  </ControlTemplate>

  <ControlTemplate x:Key="AvalonDock_ThemeAero_AnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
    <Border
          x:Name="Bd"
          Background="{StaticResource BackgroundBrush}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          BorderThickness="1"
          Margin="0,4,0,0"
          Padding="2">
      <ContentPresenter
                 Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                 ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                 ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Side" Value="Right">
        <Setter Property="Margin" Value="0,0,0,4" TargetName="Bd"/>
      </Trigger>
      <Trigger Property="Side" Value="Bottom">
        <Setter Property="Margin" Value="0,4,0,0" TargetName="Bd"/>
      </Trigger>
      <Trigger Property="Side" Value="Top">
        <Setter Property="Margin" Value="0,0,0,4" TargetName="Bd"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="true"/>
          <Condition Property="Selector.IsSelected" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" TargetName="Bd"/>
        <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" TargetName="Bd"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="{x:Type avalonDockControls:OverlayWindow}" TargetType="{x:Type avalonDockControls:OverlayWindow}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
          <Canvas x:Name="PART_DropTargetsContainer" Opacity="0.8">
            <Path x:Name="PART_PreviewBox" Fill="{StaticResource EmphasisColorBrush}" StrokeThickness="2" Stroke="{StaticResource BlueBrush}"/>
            <Grid x:Name="PART_DockingManagerDropTargets" >
              <Image x:Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left" Source="Images/DockAnchorableLeft.PNG" Stretch="None" />
              <Image x:Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right" Source="Images/DockAnchorableRight.PNG" Stretch="None" />
              <Image x:Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" Source="Images/DockAnchorableBottom.PNG" Stretch="None" />
              <Image x:Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center" Source="Images/DockAnchorableTop.PNG" Stretch="None"/>
            </Grid>
            <Grid x:Name="PART_AnchorablePaneDropTargets">
              <Grid Width="110" Height="110" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="Images/DockPaneEmpty.png" Stretch="None" Margin="0,0.5,0,-0.5"/>
                <Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="0,3.5,0, 0">
                  <Image Source="Images/DockDocumentAsAnchorableTop.png"  Stretch="None" />
                </Border>
                <Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                  <Image Source="Images/DockDocumentAsAnchorableRight.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="0,-0.5,0,0">
                  <Image Source="Images/DockDocumentAsAnchorableBottom.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                  <Image Source="Images/DockDocumentAsAnchorableLeft.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1" Margin="0,0.5,0,0">
                  <Image Source="Images/DockDocumentInside.png"  Stretch="None"/>
                </Border>
              </Grid>
            </Grid>
            <Grid x:Name="PART_DocumentPaneDropTargets">
              <Grid Width="110" Height="110" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="Images/DockPaneEmpty.PNG"  Stretch="None"/>
                <Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="2">
                  <Image Source="Images/DockDocumentTop.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                  <Image Source="Images/DockDocumentRight.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="2">
                  <Image Source="Images/DockDocumentBottom.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                  <Image Source="Images/DockDocumentLeft.png"  Stretch="None"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                  <Image Source="Images/DockDocumentInside.png"  Stretch="None"/>
                </Border>
              </Grid>
            </Grid>

            <Grid x:Name="PART_DocumentPaneFullDropTargets">
              <Grid Width="193" Height="191" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition/>
                  <RowDefinition/>
                  <RowDefinition/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Image Grid.ColumnSpan="5" Grid.RowSpan="5" Source="Images/DockPaneLargeEmpty.PNG"  Stretch="None"/>
                <Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Column="2" Grid.Row="1">
                  <Image Source="Images/DockDocumentTop.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Column="3" Grid.Row="2">
                  <Image Source="Images/DockDocumentRight.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Column="2" Grid.Row="3">
                  <Image Source="Images/DockDocumentBottom.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Column="1" Grid.Row="2">
                  <Image Source="Images/DockDocumentLeft.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Column="2" Grid.Row="2">
                  <Image Source="Images/DockDocumentInside.png"  Stretch="None"/>
                </Border>

                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Column="2" Grid.Row="0">
                  <Image Source="Images/DockDocumentAsAnchorableTop.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Column="4" Grid.Row="2">
                  <Image Source="Images/DockDocumentAsAnchorableRight.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Column="2" Grid.Row="4">
                  <Image Source="Images/DockDocumentAsAnchorableBottom.png"  Stretch="None" Margin="2"/>
                </Border>
                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Column="0" Grid.Row="2">
                  <Image Source="Images/DockDocumentAsAnchorableLeft.png"  Stretch="None" Margin="2"/>
                </Border>

              </Grid>
            </Grid>

          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="AvalonDock_ThemeAero_DocumentHeaderTemplate">
    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Style="{StaticResource AvalonDock_SubTabItemTextStyle}"/>
  </DataTemplate>

  <DataTemplate x:Key="AvalonDock_ThemeAero_AnchorableHeaderTemplate">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Image x:Name="icon" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
      <TextBlock x:Name="title" Margin="4,0,0,0" Text="{Binding Title}" TextTrimming="CharacterEllipsis"
                 Grid.Column="1" Style="{StaticResource AvalonDock_SubTabItemTextStyle}"/>
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
        <Setter Property="Margin" Value="0" TargetName="title"/>
      </DataTrigger>

    </DataTemplate.Triggers>
  </DataTemplate>

  <DataTemplate x:Key="AvalonDock_ThemeAero_DocumentTitleTemplate">
    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Style="{StaticResource AvalonDock_SubTabItemTextStyle}"/>
  </DataTemplate>

  <DataTemplate x:Key="AvalonDock_ThemeAero_AnchorableTitleTemplate">
    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Style="{StaticResource AvalonDock_SubTabItemTextStyle}" />
  </DataTemplate>

  <DataTemplate x:Key="AvalonDock_ThemeAero_IconContentTemplate">
    <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
  </DataTemplate>

  <ContextMenu x:Key="AvalonDock_ThemeAero_AnchorableContextMenu">
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}"
              Command="{Binding Path=FloatCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}"
              Command="{Binding Path=DockCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}"
              Command="{Binding Path=DockAsDocumentCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}"
              Command="{Binding Path=AutoHideCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
              Command="{Binding Path=HideCommand}"
              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
  </ContextMenu>

  <ContextMenu x:Key="AvalonDock_ThemeAero_DocumentContextMenu">
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Close}"
                Command="{Binding Path=CloseCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}"
              Command="{Binding Path=CloseAllButThisCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAll}"
              Command="{Binding Path=CloseAllCommand}" />
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Float}"
              Command="{Binding Path=FloatCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}"
              Command="{Binding Path=DockAsDocumentCommand}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
              Command="{Binding Path=NewHorizontalTabGroupCommand}"
              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
      <MenuItem.Icon>
        <Image Source="Images/HTabGroup.png" Stretch="Uniform" Width="14"/>
      </MenuItem.Icon>
    </MenuItem>

    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
              Command="{Binding Path=NewVerticalTabGroupCommand}"
              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
      <MenuItem.Icon>
        <Image Source="Images/VTabGroup.png" Stretch="Uniform" Width="14"/>
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
              Command="{Binding Path=MoveToNextTabGroupCommand}"
              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
    <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
              Command="{Binding Path=MoveToPreviousTabGroupCommand}"
              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>

  </ContextMenu>

  <!--DockingManager-->
  <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
    <Setter Property="DocumentPaneControlStyle" Value="{StaticResource AvalonDock_ThemeAero_DocumentPaneControlStyle}"/>
    <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AvalonDock_ThemeAero_AnchorablePaneControlStyle}"/>
    <Setter Property="AnchorSideTemplate" Value="{StaticResource AvalonDock_ThemeAero_AnchorSideTemplate}"/>
    <Setter Property="AnchorGroupTemplate" Value="{StaticResource AvalonDock_ThemeAero_AnchorGroupTemplate}"/>
    <Setter Property="AnchorTemplate" Value="{StaticResource AvalonDock_ThemeAero_AnchorTemplate}"/>
    <Setter Property="DocumentHeaderTemplate" Value="{StaticResource AvalonDock_ThemeAero_DocumentHeaderTemplate}"/>
    <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AvalonDock_ThemeAero_AnchorableHeaderTemplate}"/>
    <Setter Property="DocumentTitleTemplate" Value="{StaticResource AvalonDock_ThemeAero_DocumentTitleTemplate}"/>
    <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AvalonDock_ThemeAero_AnchorableTitleTemplate}"/>
    <Setter Property="AnchorableContextMenu" Value="{StaticResource AvalonDock_ThemeAero_AnchorableContextMenu}"/>
    <Setter Property="DocumentContextMenu" Value="{StaticResource AvalonDock_ThemeAero_DocumentContextMenu}"/>
    <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource AvalonDock_ThemeAero_DocumentHeaderTemplate}"/>
    <Setter Property="IconContentTemplate" Value="{StaticResource AvalonDock_ThemeAero_IconContentTemplate}"/>
    <Setter Property="GridSplitterWidth" Value="4"/>
    <Setter Property="GridSplitterHeight" Value="4"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
          <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <ContentPresenter Content="{TemplateBinding LayoutRootPanel}" Grid.Column="1" Grid.Row="1"/>
              <ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1"/>
              <ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1"/>
              <ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0"/>
              <ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2"/>
              <ContentPresenter
                         x:Name="PART_AutoHideArea"
                         Content="{TemplateBinding AutoHideWindow}"
                         VerticalAlignment="{TemplateBinding VerticalAlignment}"
                         HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                         Grid.Column="1" Grid.Row="1"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--LayoutGridResizerControl-->
  <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
          <Border Background="{TemplateBinding Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
          <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
          <avalonDockControls:DropDownControlArea
                       DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                       DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" >
            <Border Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                            >
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Background="Transparent"/>
                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                      ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                      ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                <!-- Close button should be moved out to the container style -->
                <Button
                            x:Name="DocumentCloseButton"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            Padding="-1"
                            Visibility="Hidden"
                            Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}">
                  <Image x:Name="PART_ImgPinClose"
                                  Source="{DynamicResource VectorCloseWindow}" Width="10"/>
                </Button>
              </Grid>
            </Border>
          </avalonDockControls:DropDownControlArea>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
              <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="true">
              <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
            </Trigger>
            <DataTrigger Binding="{Binding Path=CanClose}" Value="false">
              <Setter Property="Visibility" Value="Collapsed" TargetName="DocumentCloseButton"  />
            </DataTrigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
          <avalonDockControls:DropDownControlArea
                       DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                       DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
            <Border Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                  ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                <avalonDockControls:DropDownControlArea
                        Grid.Column="0"
                        DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                        DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
            </Border>
          </avalonDockControls:DropDownControlArea>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
          <Border
                   x:Name="Bd"
                   Background="{TemplateBinding Background}"
                   BorderBrush="{StaticResource NormalBrush}"
                   BorderThickness="1">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Border x:Name="Header"
                         Background="{StaticResource BackgroundBrush}">
                <avalonDockControls:AnchorablePaneTitle
                            Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Border>
              <ContentPresenter
                         Grid.Row="1"
                         FlowDirection="{TemplateBinding FlowDirection}"
                         Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"/>

              <!--<ContentPresenter
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>-->
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Visibility" Value="Collapsed" TargetName="Header"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
    <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="shell:WindowChrome.WindowChrome">
      <Setter.Value>
        <shell:WindowChrome
                ResizeBorderThickness="10"
                CaptionHeight="18"
                GlassFrameThickness="0"
                ShowSystemMenu="False"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
          <Grid>
            <Border x:Name="WindowBorder"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}">
              <Grid Margin="3">
                <Grid.RowDefinitions>
                  <RowDefinition Height="18"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="Header"
                                Padding="2,0,2,0">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>

                    <avalonDockControls:DropDownButton
                                  x:Name="ContextMenuDropdownButton"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                  Focusable="False"
                                  Grid.Column="1"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  HorizontalContentAlignment="Center"
                                  DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                  DropDownContextMenuDataContext="{Binding Path=RootDocumentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Document_CxMenu_Hint}"
                                            >
                      <Image x:Name="PART_ImgPinMenu" Stretch="None" Source="Images/PinMenu.png" Width="13"/>
                    </avalonDockControls:DropDownButton>

                    <Button
                                  x:Name="PART_PinMaximize"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Focusable="False"
                                  Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                  Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                  Grid.Column="2">
                      <Image x:Name="PART_ImgPinMaximize" Source="Images/PinMaximize.png" Width="13" />
                    </Button>

                    <Button
                                  x:Name="PART_PinRestore"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Focusable="False"
                                  Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                  Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                  Grid.Column="2">
                      <Image x:Name="PART_ImgPinRestore" Source="Images/PinRestore.png" Width="13" />
                    </Button>

                    <Button
                                  x:Name="PART_PinClose"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Focusable="False"
                                  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                  Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                  Grid.Column="3">
                      <Image x:Name="PART_ImgPinClose" Source="Images/PinClose.png" Width="13" />
                    </Button>
                  </Grid>
                </Border>
                <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
              <Setter Property="Padding" Value="3" TargetName="WindowBorder"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}" Value="True">
              <Setter Property="BorderBrush"
                   Value="{StaticResource SolidBorderBrush}" />
              <Setter Property="Background"
                   Value="{StaticResource ControlBackgroundBrush}" />
              <Setter Property="Background"
                   Value="{StaticResource BackgroundBrush}" TargetName="Header" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>

      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
    <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="shell:WindowChrome.WindowChrome">
      <Setter.Value>
        <shell:WindowChrome
                ResizeBorderThickness="10"
                CaptionHeight="18"
                CornerRadius="0"
                GlassFrameThickness="0"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
          <Grid>
            <Border x:Name="WindowBorder"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}">
              <Grid >
                <Grid.RowDefinitions>
                  <RowDefinition Height="18"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="Header"
                                Padding="2,0,2,0"
                                Background="{StaticResource NormalBrush}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border
                                  Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                      <avalonDockControls:DropDownControlArea
                                     DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                     DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter
                                          Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                          ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                          ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                      </avalonDockControls:DropDownControlArea>
                    </Border>

                    <avalonDockControls:DropDownButton
                                  x:Name="SinglePaneContextMenu"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                  Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                  Focusable="False"
                                  Grid.Column="1"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  HorizontalContentAlignment="Center"
                                  DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                  DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                      <Image x:Name="PART_ImgPinMenu" Stretch="None" Source="Images/PinMenu.png" Width="13"/>
                    </avalonDockControls:DropDownButton>

                    <Button
                                  x:Name="PART_PinMaximize"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Focusable="False"
                                  Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  HorizontalContentAlignment="Center"
                                  Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                  Grid.Column="2">
                      <Image x:Name="PART_ImgPinMaximize" Source="Images/PinMaximize.png" Width="13"/>
                    </Button>

                    <Button
                                  x:Name="PART_PinRestore"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Focusable="False"
                                  Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                  Grid.Column="2">
                      <Image  x:Name="PART_ImgPinRestore" Source="Images/PinRestore.png" Width="13"/>
                    </Button>

                    <Button
                                  x:Name="PART_PinClose"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                  Focusable="False"
                                  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                  Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                  ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                  Grid.Column="3">
                      <Image x:Name="PART_ImgPinClose" Source="Images/PinClose.png" Width="13"/>
                    </Button>
                  </Grid>
                </Border>
                <ContentPresenter
                            Content="{TemplateBinding Content}" Grid.Row="1"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
              <Setter Property="Padding" Value="3" TargetName="WindowBorder"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
              <Setter Property="Background" Value="{StaticResource NormalBrush}" TargetName="Header"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
    <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
  </Style>

  <Style x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemHoverFill" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF1FBFF" Offset="0"/>
    <GradientStop Color="#FFD5F1FE" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedFill" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFD9F4FF" Offset="0"/>
    <GradientStop Color="#FF9BDDFB" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedInactiveFill" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFEEEDED" Offset="0"/>
    <GradientStop Color="#FFDDDDDD" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedHoverFill" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFEAF9FF" Offset="0"/>
    <GradientStop Color="#FFC9EDFD" Offset="1"/>
  </LinearGradientBrush>

  <Style x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="FocusVisualStyle" Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemFocusVisual}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="5,0,5,0"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       Background="{TemplateBinding Background}"
                       CornerRadius="2" SnapsToDevicePixels="true">
            <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="11"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                <ContentPresenter Grid.RowSpan="2"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedFill}"/>
              <Setter Property="BorderBrush" Value="#FF98DDFB"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
              <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
              <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Background" Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedFill}"/>
              <Setter Property="BorderBrush" Value="#FF98DDFB"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
              <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
              <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
            </Trigger>
            <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedHoverFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                        </MultiTrigger>-->
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type avalonDockControls:NavigatorWindow}" TargetType="{x:Type avalonDockControls:NavigatorWindow}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    <Setter Property="SizeToContent" Value="WidthAndHeight"/>
    <Setter Property="ResizeMode" Value="NoResize"/>
    <Setter Property="shell:WindowChrome.WindowChrome">
      <Setter.Value>
        <shell:WindowChrome
                ResizeBorderThickness="10"
                CaptionHeight="16"
                CornerRadius="3,3,3,3"
                GlassFrameThickness="4"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
          <Grid>
            <Border x:Name="WindowBorder" BorderThickness="1"
                          CornerRadius="3"
                          Background="{StaticResource SolidBorderBrush}"
                          BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="54"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Margin="5">
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Image
                                  Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                  Stretch="None"
                                  Visibility="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource BoolToVisibilityConverter} }"/>
                    <TextBlock Text="{Binding SelectedDocument.LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" VerticalAlignment="Center" FontWeight="Bold" Margin="4,0,0,0"/>
                  </Grid>
                  <TextBlock Text="{Binding SelectedDocument.LayoutElement.Description}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
                </Grid>

                <Border Grid.Row="1"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="0,1,0,0"
                                Background="{StaticResource NormalBrush}"
                                MinHeight="200" >
                  <Grid  Margin="5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Margin="5">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <TextBlock Text="Active Tool Windows" FontWeight="Bold" Margin="0,3,0,4"/>
                      <ListBox Grid.Row="1"
                                          ItemsSource="{Binding Anchorables}"
                                          SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}"
                                          ItemContainerStyle="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemStyle}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          MaxHeight="400">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="150"/>
                              </Grid.ColumnDefinitions>
                              <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None"/>
                              <TextBlock Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="4,0,0,0"/>
                            </Grid>
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                      </ListBox>
                    </Grid>
                    <Grid Grid.Column="1" Margin="5">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <TextBlock Text="Active Files" FontWeight="Bold" Margin="0,3,0,4"/>
                      <ListBox
                                     Grid.Row="1"
                                     ItemsSource="{Binding Documents}"
                                     SelectedItem="{Binding SelectedDocument, Mode=TwoWay}"
                                     ItemContainerStyle="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemStyle}"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     MaxHeight="400">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="150"/>
                              </Grid.ColumnDefinitions>
                              <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="None"/>
                              <TextBlock Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="4,0,0,0"/>
                            </Grid>
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                          <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"/>
                          </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                      </ListBox>
                    </Grid>
                  </Grid>
                </Border>

                <Grid Grid.Row="2" Margin="5">
                  <TextBlock Text="{Binding SelectedDocument.LayoutElement.ToolTip}" VerticalAlignment="Center"/>
                </Grid>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

  </Style>

</ResourceDictionary>
