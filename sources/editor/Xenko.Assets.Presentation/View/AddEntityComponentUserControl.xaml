<UserControl x:Class="Xenko.Assets.Presentation.View.AddEntityComponentUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xk="http://schemas.xenko.com/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Xenko.Assets.Presentation.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ImageDictionary.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid x:Name="grid" Margin="4">
    <ToggleButton SnapsToDevicePixels="True" x:Name="ToggleButton">
      <DockPanel Margin="4">
        <Image DockPanel.Dock="Left" Source="{DynamicResource ImageAdd}" Width="16" Height="16" Margin="4,0"/>
        <TextBlock Text="{xk:Localize Add component}" Margin="4,0"/>
      </DockPanel>
      <i:Interaction.Behaviors>
        <xk:ToggleButtonPopupBehavior/>
      </i:Interaction.Behaviors>
    </ToggleButton>
    <Popup IsOpen="{Binding Path=IsChecked, Mode=TwoWay, ElementName=ToggleButton}" Placement="Bottom" x:Name="Popup"
                 StaysOpen="False"  AllowsTransparency="True" PopupAnimation="Slide">
      <xk:FilteringComboBox x:Name="FilteringComboBox"
                        ItemsSource="{Binding ComponentTypes}"
                        Text="{Binding SearchToken, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding AvailableComponentTypes, Converter={xk:Chained {xk:CountEnumerable}, {xk:NumericToBool}, {xk:VisibleOrHidden}}}"
                        ClearTextAfterValidation="True" ValidateOnLostFocus="False"
                        WatermarkContent="{xk:Localize Search}" >
        <xk:FilteringComboBox.Template>
          <ControlTemplate TargetType="{x:Type xk:FilteringComboBox}">
            <Grid x:Name="DropDown" SnapsToDevicePixels="True">
              <Border x:Name="DropDownBorder"  Background="{DynamicResource BackgroundBrush}" BorderBrush="Black" BorderThickness="1">
                <Grid Margin="6" MaxHeight="380">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition/>
                  </Grid.ColumnDefinitions>
                  <DockPanel Grid.Column="0" Margin="4" x:Name="LeftPanel">
                    <DockPanel Margin="0,4" DockPanel.Dock="Top">
                      <!--<Button VerticalAlignment="Center" Margin="4,0,0,0" Style="{StaticResource ImageButtonStyle}"
                              DockPanel.Dock="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                              ClickMode="Press"
                              Command="{Binding AddNewScriptComponentCommand}" CommandParameter="{Binding SearchToken}"
                              ToolTip="{xk:Localize New script, Context=ToolTip}" Width="20" Height="20" Padding="2">
                        <Image Source="{StaticResource ImageNewScript}" Width="16" Height="16"/>
                      </Button>-->
                      <xk:TextBox x:Name="PART_EditableTextBox" ValidateOnLostFocus="False" VerticalAlignment="Center" Focusable="True"
                                  WatermarkContent="{Binding WatermarkContent, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}}"
                                  Text="{Binding Text, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox},
                                  UpdateSourceTrigger=PropertyChanged}" ValidateOnTextChange="False" GetFocusOnLoad="True"
                                  IsEnabled="{TemplateBinding IsEnabled}" CancelWithEscape="False"/>
                    </DockPanel>
                    <ListBox x:Name="GroupList" MinWidth="160" VerticalAlignment="Top"
                             ItemsSource="{Binding AvailableComponentTypeGroups}"
                             IsEnabled="{Binding Text, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Converter={xk:Chained {xk:CountEnumerable}, {xk:NumericToBool}, {xk:InvertBool}}}">
                      <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
                          <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                              <Setter Property="SelectedItem" Value="{x:Null}"/>
                            </Trigger>
                          </Style.Triggers>
                        </Style>
                      </ListBox.Style>
                      <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                          <Setter Property="Background" Value="Transparent"/>
                          <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                          <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                          <Setter Property="Padding" Value="0"/>
                        </Style>
                      </ListBox.ItemContainerStyle>
                      <ListBox.ItemTemplate>
                        <DataTemplate >
                          <ToggleButton IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                        Padding="6,3">
                            <ToggleButton.Template>
                              <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <DockPanel Background="Transparent">
                                  <Border x:Name="GlyphPanel" 
                                          DockPanel.Dock="Right"
                                          Visibility="Hidden"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}">
                                    <Path VerticalAlignment="Center" 
                                          Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" 
                                          FlowDirection="LeftToRight"
                                          Margin="4,2"/>
                                  </Border>
                                  <ContentPresenter HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" VerticalAlignment="Top" Focusable="False"/>
                                </DockPanel>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                  </Trigger>
                                  <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </ToggleButton.Template>
                            <TextBlock Text="{Binding DisplayValue}" Margin="10,0"/>
                          </ToggleButton>
                        </DataTemplate>
                      </ListBox.ItemTemplate>
                      <i:Interaction.Behaviors>
                        <xk:ListBoxHighlightedItemBehavior IsEnabled="{Binding Text, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Converter={xk:EmptyStringToBool}}"
                                                           HighlightedItem="{Binding SelectedGroup, Mode=OneWayToSource}"
                                                           SelectHighlightedWhenEnteringControl="{Binding ElementName=PART_ListBox}"
                                                           UseSelectedItemIfAvailable="True" DelayToUpdate="0.2"/>
                      </i:Interaction.Behaviors>
                    </ListBox>
                  </DockPanel>
                  <Separator Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="1" Background="{StaticResource NormalBrush}"
                             Visibility="{Binding Items.Count, ElementName=PART_ListBox, Converter={xk:VisibleOrCollapsed}}"/>
                  <ListBox x:Name="PART_ListBox" SnapsToDevicePixels="True" Width="{x:Static local:AddEntityComponentUserControl.ComponentListWidth}"
                           Margin="4" Grid.Column="2" Height="{Binding ActualHeight, ElementName=LeftPanel}"
                           FocusManager.IsFocusScope="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                           ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}}"
                           SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=TwoWay}"
                           SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=TwoWay}"
                           SelectedValue="{Binding SelectedValue, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=TwoWay}"
                           SelectedValuePath="{Binding SelectedValuePath, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}, Mode=OneWay}"
                           ItemTemplate="{TemplateBinding ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                           ItemStringFormat="{TemplateBinding ItemStringFormat}"
                           Visibility="{Binding Items.Count, RelativeSource={RelativeSource Self}, Converter={xk:VisibleOrCollapsed}}">
                    <ListBox.ItemContainerStyle>
                      <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                    </ListBox.ItemContainerStyle>
                  </ListBox>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </xk:FilteringComboBox.Template>
        <xk:FilteringComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal" Margin="2">
              <Image Source="{Binding Converter={xk:Chained {xk:AbstractNodeEntryToType}, {xk:TypeToResource}}}" 
                 Width="16" Height="16"
                 RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="0,0,4,0"/>
              <TextBlock Text="{Binding Converter={xk:AbstractNodeEntryToDisplayName}}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </StackPanel>
          </DataTemplate>
        </xk:FilteringComboBox.ItemTemplate>
        <i:Interaction.Behaviors>
          <xk:OnEventCommandBehavior EventName="Validated" 
                                 Command="{Binding AddNewItemCommand}" 
                                 CommandParameter="{Binding ValidatedItem, RelativeSource={RelativeSource AncestorType=xk:FilteringComboBox}}"/>
        </i:Interaction.Behaviors>
      </xk:FilteringComboBox>

      <i:Interaction.Behaviors>
        <xk:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="xk:FilteringComboBox" Property="{x:Static Popup.IsOpenProperty}" Value="{xk:False}"/>
      </i:Interaction.Behaviors>
    </Popup>
  </Grid>  
</UserControl>
