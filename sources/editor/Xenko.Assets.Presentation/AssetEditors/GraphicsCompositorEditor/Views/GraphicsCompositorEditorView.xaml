<UserControl x:Class="Xenko.Assets.Presentation.AssetEditors.GraphicsCompositorEditor.Views.GraphicsCompositorEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:graphx="clr-namespace:GraphX.Controls;assembly=GraphX.WPF.Controls"
             xmlns:xk="http://schemas.xenko.com/xaml/presentation"
             xmlns:sskkgraph="http://schemas.xenko.com/xaml/presentation/graph"
             xmlns:vm="clr-namespace:Xenko.Assets.Presentation.AssetEditors.GraphicsCompositorEditor.ViewModels"
             xmlns:v="clr-namespace:Xenko.Assets.Presentation.AssetEditors.GraphicsCompositorEditor.Views"
             Focusable="True"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Xenko.Core.Assets.Editor;component/View/DefaultPropertyTemplateProviders.xaml"/>
        <ResourceDictionary Source="/Xenko.Assets.Presentation;component/View/ImageDictionary.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <Style TargetType="xk:EditableContentListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>
      <Style TargetType="xk:EditableContentListBox" BasedOn="{StaticResource {x:Type ListBox}}"/>

      <DataTemplate DataType="{x:Type vm:SharedRendererOutputSlotViewModel}">
        <TextBlock Text="{Binding Name}"/>
      </DataTemplate>

      <Style x:Key="AddRenderFeatureComboBox" BasedOn="{StaticResource AddItemComboBox}" TargetType="ComboBox">
        <Setter Property="Visibility" Value="Visible"/>
      </Style>

      <ContextMenu x:Key="EditorViewContextMenu">
        <MenuItem Header="{xk:Localize Create, Context=Menu}" Style="{StaticResource MenuGroupSeparatorStyle}"/>
        <MenuItem ItemsSource="{Binding SharedRendererFactories}">
          <MenuItem.ItemContainerStyle>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
              <Setter Property="Header" Value="{Binding Name, Mode=OneWay}"/>
              <Setter Property="Command" Value="{Binding CreateCommand, Mode=OneWay}"/>
            </Style>
          </MenuItem.ItemContainerStyle>
          <MenuItem.Template>
            <ControlTemplate>
              <Border Background="Transparent">
                <StackPanel IsItemsHost="True"/>
              </Border>
            </ControlTemplate>
          </MenuItem.Template>
        </MenuItem>
        <MenuItem Header="{xk:Localize Action, Context=Menu}" Style="{StaticResource MenuGroupSeparatorStyle}"/>
        <MenuItem Header="{xk:Localize Delete selection, Context=Menu}" Command="{Binding DeleteSelectionCommand}"/>
      </ContextMenu>


      <Style TargetType="{x:Type sskkgraph:NodeVertexControl}" BasedOn="{StaticResource {x:Type sskkgraph:NodeVertexControl}}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type sskkgraph:NodeVertexControl}">
              <Grid d:DataContext="{d:DesignInstance v:GraphicsCompositorNodeVertex}">
                <i:Interaction.Behaviors>
                  <xk:FrameworkElementDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}" CanDrag="False" />
                </i:Interaction.Behaviors>

                <Grid.Effect>
                  <DropShadowEffect BlurRadius="10" ShadowDepth="2"/>
                </Grid.Effect>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" x:Name="PART_vertexTitle" Background="{TemplateBinding TitleBackground}" BorderBrush="{TemplateBinding TitleBorderBrush}" CornerRadius="{TemplateBinding TitleBorderCornerRadius}" Padding="{TemplateBinding TitlePadding}">
                  <TextBlock x:Name="PART_vertexName" Text="{Binding Block.Title}" HorizontalAlignment="Center" FontWeight="Bold" Padding="10,0,10,0" />
                </Border>

                <Border Grid.Row="1" x:Name="PART_vertexContent" Background="{TemplateBinding ContentBackground}" BorderBrush="{TemplateBinding ContentBorderBrush}" CornerRadius="{TemplateBinding ContentBorderCornerRadius}" Padding="{TemplateBinding ContentPadding}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" MinWidth="50"/>
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ItemsControl Grid.Column="0" x:Name="PART_inputItemsControl" ItemsSource="{TemplateBinding InputSlots}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto" />
                              <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Ellipse Grid.Column="0" x:Name="connector" DataContext="{Binding}" AllowDrop="True" StrokeThickness="4"
                                                             Stroke="{StaticResource FallbackConnector}" 
                                                             Fill="{StaticResource FallbackConnector}"
                                                             VerticalAlignment="Center" HorizontalAlignment="Left" Width="15" Height="15">
                              <i:Interaction.Behaviors>
                                <sskkgraph:ActiveConnectorBehavior ActiveConnectorHandler="{Binding RelativeSource={RelativeSource AncestorType={x:Type sskkgraph:NodeVertexControl}}}" Slot="{Binding}" />
                                <sskkgraph:ConnectorDropBehavior DropHandler="{Binding RelativeSource={RelativeSource AncestorType={x:Type sskkgraph:NodeVertexControl}}}" />
                              </i:Interaction.Behaviors>
                            </Ellipse>
                            <!-- No content on incoming link, there is only one representing the instance -->
                            <!--<ContentPresenter Grid.Column="1" Content="{Binding}" Margin="2,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>-->
                          </Grid>
                          <DataTemplate.Triggers>
                            <!-- Note: We do want to apply IsMouseOver in between so that it looks good on disconnected pins too (stroke change color, center stays transparent) -->
                            <DataTrigger Binding="{Binding Links.Count, Converter={xk:NumericToBool}}" Value="False">
                              <Setter TargetName="connector" Property="Stroke" Value="{StaticResource FallbackConnectorDisconnected}" />
                            </DataTrigger>
                            <Trigger SourceName="connector" Property="IsMouseOver" Value="True">
                              <Setter TargetName="connector" Property="Stroke" Value="{StaticResource FallbackConnectorMouseOver}" />
                              <Setter TargetName="connector" Property="Fill" Value="{StaticResource FallbackConnectorMouseOver}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Links.Count, Converter={xk:NumericToBool}}" Value="False">
                              <Setter TargetName="connector" Property="Fill" Value="Transparent" />
                            </DataTrigger>
                          </DataTemplate.Triggers>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl Grid.Column="1" x:Name="PART_outputItemsControl" ItemsSource="{TemplateBinding OutputSlots}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="vm:IGraphicsCompositorSlotViewModel">
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*" MinWidth="50"/>
                              <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0" Content="{Binding}" Margin="10,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <Ellipse Grid.Column="1" x:Name="connector" DataContext="{Binding}" AllowDrop="True" StrokeThickness="4"
                                                             Stroke="{Binding Kind, Converter={xk:Chained {xk:StringConcat}, {xk:StaticResourceConverter}, Parameter1=Connector}, FallbackValue={StaticResource FallbackConnector}}" 
                                                             Fill="{Binding Kind, Converter={xk:Chained {xk:StringConcat}, {xk:StaticResourceConverter}, Parameter1=Connector}, FallbackValue={StaticResource FallbackConnector}}"
                                                             VerticalAlignment="Center" HorizontalAlignment="Left" Width="15" Height="15">
                              <i:Interaction.Behaviors>
                                <sskkgraph:ActiveConnectorBehavior ActiveConnectorHandler="{Binding RelativeSource={RelativeSource AncestorType={x:Type sskkgraph:NodeVertexControl}}}" Slot="{Binding}" />
                                <sskkgraph:ConnectorDragBehavior Node="{Binding Vertex, RelativeSource={RelativeSource AncestorType={x:Type sskkgraph:NodeVertexControl}}}" Slot="{Binding}"/>
                              </i:Interaction.Behaviors>
                            </Ellipse>
                          </Grid>
                          <DataTemplate.Triggers>
                            <!-- Note: We do want to apply IsMouseOver in between so that it looks good on disconnected pins too (stroke change color, center stays transparent) -->
                            <DataTrigger Binding="{Binding Links.Count, Converter={xk:NumericToBool}}" Value="False">
                              <Setter TargetName="connector" Property="Stroke" Value="{Binding Kind, Converter={xk:Chained {xk:StringConcat}, {xk:StaticResourceConverter}, Parameter1=ConnectorDisconnected}, FallbackValue={StaticResource FallbackConnectorDisconnected}}" />
                            </DataTrigger>
                            <Trigger SourceName="connector" Property="IsMouseOver" Value="True">
                              <Setter TargetName="connector" Property="Stroke" Value="{Binding Kind, Converter={xk:Chained {xk:StringConcat}, {xk:StaticResourceConverter}, Parameter1=ConnectorMouseOver}, FallbackValue={StaticResource FallbackConnectorMouseOver}}" />
                              <Setter TargetName="connector" Property="Fill" Value="{Binding Kind, Converter={xk:Chained {xk:StringConcat}, {xk:StaticResourceConverter}, Parameter1=ConnectorMouseOver}, FallbackValue={StaticResource FallbackConnectorMouseOver}}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Links.Count, Converter={xk:NumericToBool}}" Value="False">
                              <Setter TargetName="connector" Property="Fill" Value="Transparent" />
                            </DataTrigger>
                          </DataTemplate.Triggers>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </Grid>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="Selector.IsSelected" Value="True">
                  <Setter TargetName="PART_vertexTitle" Property="Background" Value="{Binding SelectedTitleBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <Setter TargetName="PART_vertexContent" Property="Background" Value="{Binding SelectedContentBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

        <Setter Property="graphx:DragBehaviour.IsDragEnabled" Value="True" />
        <Setter Property="graphx:DragBehaviour.UpdateEdgesOnMove" Value="True" />
      </Style>

      <Style TargetType="{x:Type sskkgraph:NodeEdgeControl}" BasedOn="{StaticResource {x:Type sskkgraph:NodeEdgeControl}}">
      </Style>

    </ResourceDictionary>
  </UserControl.Resources>
  <i:Interaction.Behaviors>
    <xk:CommandBindingBehavior RoutedCommand="ApplicationCommands.Delete" Command="{Binding Editor.DeleteSelectionCommand}" />
  </i:Interaction.Behaviors>
  <Grid DataContext="{Binding Editor}" d:DataContext="{d:DesignInstance vm:GraphicsCompositorEditorViewModel}">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="5"/>
      <ColumnDefinition Width="3*"/>
    </Grid.ColumnDefinitions>
    <Grid Grid.Column="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="5"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="5"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0">
        <DockPanel Margin="8" DockPanel.Dock="Top">
          <UniformGrid Rows="1" DockPanel.Dock="Right">
            <Button Margin="2" Content="{xk:Image {StaticResource ImageAdd}, 16, 16, NearestNeighbor}" Command="{Binding AddNewRenderStageCommand}"/>
            <Button Margin="2" Content="{xk:Image {StaticResource ImageRemove}, 16, 16, NearestNeighbor}" Command="{Binding RemoveSelectedRenderStagesCommand}"/>
          </UniformGrid>
          <TextBlock Text="{xk:Localize Render stages:}" VerticalAlignment="Center"/>
        </DockPanel>
        <xk:EditableContentListBox Margin="8" ItemsSource="{Binding RenderStages}" SelectionMode="Extended"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
          <xk:EditableContentListBox.ItemContainerStyle>
            <Style TargetType="xk:EditableContentListBoxItem" BasedOn="{StaticResource {x:Type xk:EditableContentListBoxItem}}">
              <Setter Property="xk:Interaction.Behaviors">
                <Setter.Value>
                  <xk:BehaviorCollection>
                    <xk:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="xk:TextBox" Property="xk:EditableContentListBoxItem.IsEditing" Value="False"/>
                    <xk:OnEventSetPropertyBehavior EventName="Cancelled" EventOwnerType="xk:TextBox" Property="xk:EditableContentListBoxItem.IsEditing" Value="False"/>
                    <xk:OnEventCommandBehavior EventName="MouseDoubleClick" EventOwnerType="Control" HandleEvent="True" Command="{x:Static xk:EditableContentListBox.BeginEditCommand}"/>
                  </xk:BehaviorCollection>
                </Setter.Value>
              </Setter>
            </Style>
          </xk:EditableContentListBox.ItemContainerStyle>
          <xk:EditableContentListBox.ItemTemplate>
            <DataTemplate DataType="vm:RenderStageViewModel">
              <TextBlock Margin="5,0,0,0" TextTrimming="CharacterEllipsis">
                                <Run Text="{Binding Name}" FontWeight="Bold"/>
                                <Run Text="{Binding EffectSlotName, Converter={xk:FormatString}, ConverterParameter=(Slot {0})}" Foreground="Gray"/>
              </TextBlock>
            </DataTemplate>
          </xk:EditableContentListBox.ItemTemplate>
          <xk:EditableContentListBox.EditItemTemplate>
            <DataTemplate DataType="vm:RenderStageViewModel">
              <DockPanel HorizontalAlignment="Stretch">
                <xk:TextBox Text="{Binding Name}" SelectAllOnFocus="True" DockPanel.Dock="Left" />
              </DockPanel>
            </DataTemplate>
          </xk:EditableContentListBox.EditItemTemplate>
          <i:Interaction.Behaviors>
            <xk:ListBoxBindableSelectedItemsBehavior SelectedItems="{Binding SelectedRenderStages}"/>
            <xk:ListBoxDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}"/>
          </i:Interaction.Behaviors>
        </xk:EditableContentListBox>
      </DockPanel>

      <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext"/>

      <DockPanel Grid.Row="2">
        <DockPanel Margin="8" DockPanel.Dock="Top">
          <UniformGrid Rows="1" DockPanel.Dock="Right">
            <!--<Button Margin="2" Content="{xk:Image {StaticResource ImageAdd}, 16, 16, NearestNeighbor}" Command="{Binding AddNewMethodCommand}"/>-->
            <ComboBox x:Name="InstanceTypeSelectionComboBox" Style="{StaticResource AddRenderFeatureComboBox}" ItemsSource="{Binding RenderFeatureTypes}">
              <i:Interaction.Behaviors>
                <xk:OnComboBoxClosedWithSelectionBehavior Command="{Binding AddNewRenderFeatureCommand}" CommandParameter="{Binding SelectedItem, ElementName=InstanceTypeSelectionComboBox}"/>
              </i:Interaction.Behaviors>
            </ComboBox>
            <Button Margin="2" Content="{xk:Image {StaticResource ImageRemove}, 16, 16, NearestNeighbor}" Command="{Binding RemoveSelectedRenderFeaturesCommand}"/>
          </UniformGrid>
          <TextBlock Text="{xk:Localize Render features:}" VerticalAlignment="Center"/>
        </DockPanel>
        <ListBox Margin="8" ItemsSource="{Binding RenderFeatures}" SelectionMode="Extended"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
          <ListBox.ItemTemplate>
            <DataTemplate  DataType="vm:RenderFeatureViewModel">
              <TextBlock Margin="5,0,0,0" TextTrimming="CharacterEllipsis" Text="{Binding Title}"/>
            </DataTemplate>
          </ListBox.ItemTemplate>
          <i:Interaction.Behaviors>
            <xk:ListBoxBindableSelectedItemsBehavior SelectedItems="{Binding SelectedRenderFeatures}"/>
            <xk:ListBoxDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}"/>
          </i:Interaction.Behaviors>
        </ListBox>
      </DockPanel>

      <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext"/>

      <DockPanel Grid.Row="4">
        <DockPanel Margin="8" DockPanel.Dock="Top">
          <UniformGrid Rows="1" DockPanel.Dock="Right">
            <Button Margin="2" Content="{xk:Image {StaticResource ImageAdd}, 16, 16, NearestNeighbor}" Command="{Binding AddNewCameraSlotCommand}"/>
            <Button Margin="2" Content="{xk:Image {StaticResource ImageRemove}, 16, 16, NearestNeighbor}" Command="{Binding RemoveSelectedCameraSlotsCommand}"/>
          </UniformGrid>
          <TextBlock Text="{xk:Localize Camera slots:}" VerticalAlignment="Center"/>
        </DockPanel>
        <xk:EditableContentListBox Margin="8" ItemsSource="{Binding CameraSlots}" SelectionMode="Extended"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
          <xk:EditableContentListBox.ItemContainerStyle>
            <Style TargetType="xk:EditableContentListBoxItem" BasedOn="{StaticResource {x:Type xk:EditableContentListBoxItem}}">
              <Setter Property="xk:Interaction.Behaviors">
                <Setter.Value>
                  <xk:BehaviorCollection>
                    <xk:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="xk:TextBox" Property="xk:EditableContentListBoxItem.IsEditing" Value="False"/>
                    <xk:OnEventSetPropertyBehavior EventName="Cancelled" EventOwnerType="xk:TextBox" Property="xk:EditableContentListBoxItem.IsEditing" Value="False"/>
                    <xk:OnEventCommandBehavior EventName="MouseDoubleClick" EventOwnerType="Control" HandleEvent="True" Command="{x:Static xk:EditableContentListBox.BeginEditCommand}"/>
                  </xk:BehaviorCollection>
                </Setter.Value>
              </Setter>
            </Style>
          </xk:EditableContentListBox.ItemContainerStyle>
          <xk:EditableContentListBox.ItemTemplate>
            <DataTemplate DataType="vm:GraphicsCompositorCameraSlotsViewModel">
              <TextBlock Margin="5,0,0,0" TextTrimming="CharacterEllipsis">
                <Run Text="{Binding Name}" FontWeight="Bold"/>
              </TextBlock>
            </DataTemplate>
          </xk:EditableContentListBox.ItemTemplate>
          <xk:EditableContentListBox.EditItemTemplate>
            <DataTemplate DataType="vm:GraphicsCompositorCameraSlotsViewModel">
              <DockPanel HorizontalAlignment="Stretch">
                <xk:TextBox Text="{Binding Name}" SelectAllOnFocus="True" DockPanel.Dock="Left" />
              </DockPanel>
            </DataTemplate>
          </xk:EditableContentListBox.EditItemTemplate>
          <i:Interaction.Behaviors>
            <xk:ListBoxBindableSelectedItemsBehavior SelectedItems="{Binding SelectedCameraSlots}"/>
            <xk:ListBoxDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}"/>
          </i:Interaction.Behaviors>
        </xk:EditableContentListBox>
      </DockPanel>
    </Grid>
    <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext"/>
    <graphx:ZoomControl x:Name="ZoomControl" Grid.Column="2" Background="#49494E" Zoom="1.0" ZoomSensitivity="10.0" IsAnimationEnabled="False" RenderOptions.BitmapScalingMode="HighQuality" ContextMenu="{StaticResource EditorViewContextMenu}">
      <i:Interaction.Behaviors>
        <xk:FrameworkElementDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}" CanDrag="False" />
      </i:Interaction.Behaviors>
      <sskkgraph:NodeGraphArea x:Name="Area">
        <i:Interaction.Behaviors>
          <sskkgraph:LinkPreviewBehavior />
          <sskkgraph:NodeGraphBehavior Vertices="{Binding Graph.Vertices, RelativeSource={RelativeSource AncestorType=v:GraphicsCompositorEditorView}}"
                                       Edges="{Binding Graph.Edges, RelativeSource={RelativeSource AncestorType=v:GraphicsCompositorEditorView}}"
                                       AutoLayout="True"/>
          <sskkgraph:GraphSelectionBehavior SelectedVertexItems="{Binding Graph.SelectedVertices, RelativeSource={RelativeSource AncestorType=v:GraphicsCompositorEditorView}}"
                                            SelectedEdgeItems="{Binding Graph.SelectedEdges, RelativeSource={RelativeSource AncestorType=v:GraphicsCompositorEditorView}}"/>
        </i:Interaction.Behaviors>
      </sskkgraph:NodeGraphArea>
      <graphx:ZoomControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteSelectionCommand}"/>
      </graphx:ZoomControl.InputBindings>
    </graphx:ZoomControl>
  </Grid>
</UserControl>

